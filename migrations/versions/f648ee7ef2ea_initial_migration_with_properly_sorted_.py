"""Initial migration with properly sorted tables

Revision ID: f648ee7ef2ea
Revises: 
Create Date: 2025-10-27 20:29:33.038264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f648ee7ef2ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('badge_type', sa.Enum('LEARNING', 'PROJECT', 'CV', 'JOB', 'PORTFOLIO', 'STREAK', 'COMMUNITY', 'MILESTONE', name='badgetype'), nullable=False),
    sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'EPIC', 'LEGENDARY', name='badgerarity'), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('color_hex', sa.String(length=7), nullable=False),
    sa.Column('background_color_hex', sa.String(length=7), nullable=False),
    sa.Column('points_required', sa.Integer(), nullable=False),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_hidden', sa.Boolean(), nullable=False),
    sa.Column('can_be_earned_multiple', sa.Boolean(), nullable=False),
    sa.Column('total_earned', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_badges')),
    sa.UniqueConstraint('name', name=op.f('uq_badges_name'))
    )
    with op.batch_alter_table('badges', schema=None) as batch_op:
        batch_op.create_index('idx_badge_active_type', ['is_active', 'badge_type'], unique=False)
        batch_op.create_index('idx_badge_earned_rarity', ['total_earned', 'rarity'], unique=False)
        batch_op.create_index('idx_badge_hidden_active', ['is_hidden', 'is_active'], unique=False)
        batch_op.create_index('idx_badge_points_type', ['points_required', 'badge_type'], unique=False)
        batch_op.create_index('idx_badge_type_rarity', ['badge_type', 'rarity'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_badge_type'), ['badge_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_can_be_earned_multiple'), ['can_be_earned_multiple'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_is_hidden'), ['is_hidden'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_points_required'), ['points_required'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_rarity'), ['rarity'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_badges_total_earned'), ['total_earned'], unique=False)

    op.create_table('certification_paths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('issuing_organization', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('certification_level', sa.String(length=20), nullable=False),
    sa.Column('industry_relevance', sa.JSON(), nullable=False),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('exam_details', sa.JSON(), nullable=True),
    sa.Column('study_materials', sa.JSON(), nullable=True),
    sa.Column('cost_usd', sa.Integer(), nullable=True),
    sa.Column('preparation_time_hours', sa.Integer(), nullable=True),
    sa.Column('validity_period_months', sa.Integer(), nullable=True),
    sa.Column('career_impact', sa.Text(), nullable=True),
    sa.Column('salary_impact_percentage', sa.Integer(), nullable=True),
    sa.Column('official_website', sa.String(length=500), nullable=True),
    sa.Column('registration_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certification_paths'))
    )
    with op.batch_alter_table('certification_paths', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_certification_paths_id'), ['id'], unique=False)

    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('short_description', sa.String(length=300), nullable=False),
    sa.Column('challenge_type', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'SPECIAL', 'ACHIEVEMENT', name='challengetype'), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('target_count', sa.Integer(), nullable=False),
    sa.Column('points_reward', sa.Integer(), nullable=False),
    sa.Column('badge_rewards', sa.JSON(), nullable=True),
    sa.Column('bonus_rewards', sa.JSON(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'EXPIRED', 'DRAFT', name='challengestatus'), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('banner_url', sa.String(length=500), nullable=True),
    sa.Column('color_theme', sa.String(length=20), nullable=False),
    sa.Column('total_participants', sa.Integer(), nullable=False),
    sa.Column('total_completions', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenges'))
    )
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenges_challenge_type'), ['challenge_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_id'), ['id'], unique=False)

    op.create_table('company_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('company_size', sa.String(length=20), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('headquarters_location', sa.String(length=100), nullable=True),
    sa.Column('locations', sa.JSON(), nullable=True),
    sa.Column('remote_policy', sa.String(length=20), nullable=True),
    sa.Column('company_culture', sa.Text(), nullable=True),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('values', sa.JSON(), nullable=True),
    sa.Column('hr_email', sa.String(length=100), nullable=True),
    sa.Column('careers_email', sa.String(length=100), nullable=True),
    sa.Column('ceo_email', sa.String(length=100), nullable=True),
    sa.Column('glassdoor_rating', sa.Float(), nullable=True),
    sa.Column('employee_satisfaction_score', sa.Float(), nullable=True),
    sa.Column('typical_hiring_process', sa.Text(), nullable=True),
    sa.Column('average_interview_duration', sa.String(length=50), nullable=True),
    sa.Column('response_time_days', sa.Integer(), nullable=True),
    sa.Column('preferred_tech_stack', sa.JSON(), nullable=True),
    sa.Column('preferred_methodologies', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_profiles'))
    )
    with op.batch_alter_table('company_profiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_company_profiles_company_name'), ['company_name'], unique=True)
        batch_op.create_index(batch_op.f('ix_company_profiles_id'), ['id'], unique=False)

    op.create_table('cv_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('target_role', sa.String(length=100), nullable=True),
    sa.Column('target_industry', sa.String(length=100), nullable=True),
    sa.Column('template_data', sa.JSON(), nullable=False),
    sa.Column('preview_image_url', sa.String(length=500), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_premium', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cv_templates'))
    )
    with op.batch_alter_table('cv_templates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cv_templates_id'), ['id'], unique=False)

    op.create_table('forum_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('parent_category_id', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=False),
    sa.Column('post_count', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('allow_anonymous_posts', sa.Boolean(), nullable=False),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_category_id'], ['forum_categories.id'], name='fk_forum_category_parent', use_alter=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_forum_categories_name')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('forum_categories', schema=None) as batch_op:
        batch_op.create_index('idx_forum_categories_active_order', ['is_active', 'display_order'], unique=False)
        batch_op.create_index('idx_forum_categories_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_forum_categories_display_order', ['display_order'], unique=False)
        batch_op.create_index('idx_forum_categories_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_forum_categories_is_public', ['is_public'], unique=False)
        batch_op.create_index('idx_forum_categories_name', ['name'], unique=False)
        batch_op.create_index('idx_forum_categories_parent_category_id', ['parent_category_id'], unique=False)
        batch_op.create_index('idx_forum_categories_parent_order', ['parent_category_id', 'display_order'], unique=False)
        batch_op.create_index('idx_forum_categories_post_count', ['post_count'], unique=False)
        batch_op.create_index('idx_forum_categories_public_active', ['is_public', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_categories_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_categories_slug'), ['slug'], unique=True)

    op.create_table('industry_tracks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('color_theme', sa.String(length=20), nullable=False),
    sa.Column('difficulty_levels', sa.JSON(), nullable=False),
    sa.Column('methodologies_focus', sa.JSON(), nullable=False),
    sa.Column('learning_objectives', sa.JSON(), nullable=False),
    sa.Column('prerequisite_skills', sa.JSON(), nullable=True),
    sa.Column('career_outcomes', sa.JSON(), nullable=False),
    sa.Column('total_projects', sa.Integer(), nullable=False),
    sa.Column('total_learners', sa.Integer(), nullable=False),
    sa.Column('average_completion_rate', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('meta_description', sa.String(length=160), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_industry_tracks'))
    )
    with op.batch_alter_table('industry_tracks', schema=None) as batch_op:
        batch_op.create_index('idx_industry_active_featured', ['is_active', 'is_featured'], unique=False)
        batch_op.create_index('idx_industry_created_active', ['created_at', 'is_active'], unique=False)
        batch_op.create_index('idx_industry_projects_learners', ['total_projects', 'total_learners'], unique=False)
        batch_op.create_index('idx_industry_stats', ['total_learners', 'average_completion_rate'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_average_completion_rate'), ['average_completion_rate'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_color_theme'), ['color_theme'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_is_featured'), ['is_featured'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_industry_tracks_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_industry_tracks_total_learners'), ['total_learners'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_total_projects'), ['total_projects'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_tracks_updated_at'), ['updated_at'], unique=False)

    op.create_table('job_listings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('responsibilities', sa.Text(), nullable=True),
    sa.Column('employment_type', sa.String(length=20), nullable=False),
    sa.Column('work_mode', sa.String(length=20), nullable=False),
    sa.Column('experience_level', sa.String(length=20), nullable=False),
    sa.Column('salary_min', sa.Integer(), nullable=True),
    sa.Column('salary_max', sa.Integer(), nullable=True),
    sa.Column('salary_currency', sa.String(length=3), nullable=False),
    sa.Column('salary_period', sa.String(length=10), nullable=False),
    sa.Column('required_skills', sa.JSON(), nullable=True),
    sa.Column('preferred_skills', sa.JSON(), nullable=True),
    sa.Column('technologies', sa.JSON(), nullable=True),
    sa.Column('methodologies', sa.JSON(), nullable=True),
    sa.Column('company_size', sa.String(length=20), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('company_description', sa.Text(), nullable=True),
    sa.Column('company_website', sa.String(length=255), nullable=True),
    sa.Column('application_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('application_url', sa.String(length=500), nullable=True),
    sa.Column('hr_email', sa.String(length=100), nullable=True),
    sa.Column('hiring_manager_email', sa.String(length=100), nullable=True),
    sa.Column('source_platform', sa.String(length=50), nullable=False),
    sa.Column('source_url', sa.String(length=1000), nullable=False),
    sa.Column('external_job_id', sa.String(length=100), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('popularity_score', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_remote_friendly', sa.Boolean(), nullable=False),
    sa.Column('is_entry_level_friendly', sa.Boolean(), nullable=False),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_listings'))
    )
    with op.batch_alter_table('job_listings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_listings_company_name'), ['company_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_employment_type'), ['employment_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_experience_level'), ['experience_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_listings_work_mode'), ['work_mode'], unique=False)

    op.create_table('leaderboards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('time_period', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('max_entries', sa.Integer(), nullable=False),
    sa.Column('auto_update', sa.Boolean(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_leaderboards'))
    )
    with op.batch_alter_table('leaderboards', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_leaderboards_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_leaderboards_slug'), ['slug'], unique=True)

    op.create_table('learning_modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('learning_path', sa.Enum('BEGINNER_PM', 'AGILE_SCRUM', 'DIGITAL_TRANSFORMATION', 'RISK_MANAGEMENT', 'STAKEHOLDER_MANAGEMENT', 'PRODUCT_MANAGEMENT', name='learningpath'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('video_url', sa.String(length=500), nullable=True),
    sa.Column('audio_url', sa.String(length=500), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_learning_modules'))
    )
    with op.batch_alter_table('learning_modules', schema=None) as batch_op:
        batch_op.create_index('idx_module_difficulty_path', ['difficulty_level', 'learning_path'], unique=False)
        batch_op.create_index('idx_module_duration_difficulty', ['duration_minutes', 'difficulty_level'], unique=False)
        batch_op.create_index('idx_module_path_active', ['learning_path', 'is_active'], unique=False)
        batch_op.create_index('idx_module_path_order', ['learning_path', 'order_index'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_difficulty_level'), ['difficulty_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_duration_minutes'), ['duration_minutes'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_learning_path'), ['learning_path'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_order_index'), ['order_index'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_modules_updated_at'), ['updated_at'], unique=False)

    op.create_table('skill_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category_type', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skill_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_skill_categories_name'))
    )
    with op.batch_alter_table('skill_categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skill_categories_id'), ['id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'RECRUITER', 'COMPANY', 'MENTOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_active_role', ['is_active', 'role'], unique=False)
        batch_op.create_index('idx_user_created_role', ['created_at', 'role'], unique=False)
        batch_op.create_index('idx_user_last_login_active', ['last_login', 'is_active'], unique=False)
        batch_op.create_index('idx_user_verified_active', ['is_verified', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_verified'), ['is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_login'), ['last_login'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('weekly_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('challenge_type', sa.String(length=100), nullable=False),
    sa.Column('requirements', sa.JSON(), nullable=False),
    sa.Column('points_reward', sa.Integer(), nullable=False),
    sa.Column('bonus_rewards', sa.JSON(), nullable=True),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weekly_challenges'))
    )
    with op.batch_alter_table('weekly_challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_weekly_challenges_id'), ['id'], unique=False)

    op.create_table('auto_application_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('keyword_preferences', sa.JSON(), nullable=True),
    sa.Column('industry_preferences', sa.JSON(), nullable=True),
    sa.Column('company_size_preferences', sa.JSON(), nullable=True),
    sa.Column('auto_apply_window_start', sa.Integer(), nullable=True),
    sa.Column('auto_apply_window_end', sa.Integer(), nullable=True),
    sa.Column('auto_apply_days', sa.JSON(), nullable=True),
    sa.Column('require_visa_sponsorship', sa.Boolean(), nullable=False),
    sa.Column('avoid_third_party_recruiters', sa.Boolean(), nullable=False),
    sa.Column('minimum_company_rating', sa.Float(), nullable=True),
    sa.Column('require_benefits', sa.JSON(), nullable=True),
    sa.Column('cover_letter_template', sa.Text(), nullable=True),
    sa.Column('application_persona', sa.String(length=50), nullable=True),
    sa.Column('emphasize_skills', sa.JSON(), nullable=True),
    sa.Column('max_applications_per_company', sa.Integer(), nullable=False),
    sa.Column('min_days_between_applications', sa.Integer(), nullable=False),
    sa.Column('require_job_description_completeness', sa.Boolean(), nullable=False),
    sa.Column('total_auto_applications', sa.Integer(), nullable=False),
    sa.Column('successful_applications', sa.Integer(), nullable=False),
    sa.Column('interview_rate', sa.Float(), nullable=True),
    sa.Column('last_job_scan_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_application_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_auto_application_settings_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auto_application_settings')),
    sa.UniqueConstraint('user_id', name=op.f('uq_auto_application_settings_user_id'))
    )
    with op.batch_alter_table('auto_application_settings', schema=None) as batch_op:
        batch_op.create_index('idx_settings_application_time', ['last_application_at', 'user_id'], unique=False)
        batch_op.create_index('idx_settings_scan_time', ['last_job_scan_at', 'user_id'], unique=False)
        batch_op.create_index('idx_settings_success_rate', ['interview_rate', 'total_auto_applications'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_settings_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_settings_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_settings_last_application_at'), ['last_application_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_settings_last_job_scan_at'), ['last_job_scan_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_settings_updated_at'), ['updated_at'], unique=False)

    op.create_table('challenge_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('submission_data', sa.JSON(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('bonus_earned', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['weekly_challenges.id'], name=op.f('fk_challenge_participations_challenge_id_weekly_challenges'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_challenge_participations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenge_participations'))
    )
    with op.batch_alter_table('challenge_participations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenge_participations_id'), ['id'], unique=False)

    op.create_table('community_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('max_attendees', sa.Integer(), nullable=True),
    sa.Column('registration_required', sa.Boolean(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('meeting_url', sa.String(length=500), nullable=True),
    sa.Column('registration_url', sa.String(length=500), nullable=True),
    sa.Column('agenda', sa.JSON(), nullable=True),
    sa.Column('speakers', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('attendee_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('recording_url', sa.String(length=500), nullable=True),
    sa.Column('resource_links', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name=op.f('fk_community_events_organizer_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_community_events')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('community_events', schema=None) as batch_op:
        batch_op.create_index('idx_community_events_attendee_count', ['attendee_count'], unique=False)
        batch_op.create_index('idx_community_events_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_community_events_end_date', ['end_date'], unique=False)
        batch_op.create_index('idx_community_events_event_type', ['event_type'], unique=False)
        batch_op.create_index('idx_community_events_free_status', ['is_free', 'status'], unique=False)
        batch_op.create_index('idx_community_events_is_free', ['is_free'], unique=False)
        batch_op.create_index('idx_community_events_organizer_id', ['organizer_id'], unique=False)
        batch_op.create_index('idx_community_events_organizer_status', ['organizer_id', 'status'], unique=False)
        batch_op.create_index('idx_community_events_registration_required', ['registration_required'], unique=False)
        batch_op.create_index('idx_community_events_start_date', ['start_date'], unique=False)
        batch_op.create_index('idx_community_events_status', ['status'], unique=False)
        batch_op.create_index('idx_community_events_status_created', ['status', 'created_at'], unique=False)
        batch_op.create_index('idx_community_events_status_start', ['status', 'start_date'], unique=False)
        batch_op.create_index('idx_community_events_type_start', ['event_type', 'start_date'], unique=False)
        batch_op.create_index('idx_community_events_type_status', ['event_type', 'status'], unique=False)
        batch_op.create_index('idx_community_events_upcoming_start', ['status', 'start_date', 'is_free'], unique=False)
        batch_op.create_index('idx_community_events_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_community_events_id'), ['id'], unique=False)

    op.create_table('cvs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('target_role', sa.String(length=100), nullable=True),
    sa.Column('target_industry', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('professional_title', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('professional_summary', sa.Text(), nullable=True),
    sa.Column('objective_statement', sa.Text(), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('github_url', sa.String(length=255), nullable=True),
    sa.Column('portfolio_url', sa.String(length=255), nullable=True),
    sa.Column('personal_website', sa.String(length=255), nullable=True),
    sa.Column('include_photo', sa.Boolean(), nullable=False),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.Column('color_scheme', sa.String(length=20), nullable=False),
    sa.Column('font_style', sa.String(length=30), nullable=False),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('generation_prompt', sa.Text(), nullable=True),
    sa.Column('last_exported_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('docx_url', sa.String(length=500), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_cvs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cvs'))
    )
    with op.batch_alter_table('cvs', schema=None) as batch_op:
        batch_op.create_index('idx_cv_ai_generated', ['is_ai_generated', 'created_at'], unique=False)
        batch_op.create_index('idx_cv_industry_role', ['target_industry', 'target_role'], unique=False)
        batch_op.create_index('idx_cv_template_role', ['template_type', 'target_role'], unique=False)
        batch_op.create_index('idx_cv_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_cv_user_default', ['user_id', 'is_default'], unique=False)
        batch_op.create_index('idx_cv_user_status', ['user_id', 'is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_is_ai_generated'), ['is_ai_generated'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_is_default'), ['is_default'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_is_public'), ['is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_last_exported_at'), ['last_exported_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_target_industry'), ['target_industry'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_target_role'), ['target_role'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_template_type'), ['template_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_user_id'), ['user_id'], unique=False)

    op.create_table('forum_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_format', sa.String(length=20), nullable=False),
    sa.Column('post_type', sa.String(length=20), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_answered', sa.Boolean(), nullable=False),
    sa.Column('accepted_answer_id', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(length=350), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['accepted_answer_id'], ['forum_comments.id'], name='fk_forum_post_accepted_answer', use_alter=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_forum_posts_author_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['forum_categories.id'], name=op.f('fk_forum_posts_category_id_forum_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_posts')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.create_index('idx_forum_posts_author_active', ['author_id', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_posts_author_id', ['author_id'], unique=False)
        batch_op.create_index('idx_forum_posts_category_active', ['category_id', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_posts_category_activity', ['category_id', 'last_activity_at'], unique=False)
        batch_op.create_index('idx_forum_posts_category_created', ['category_id', 'created_at'], unique=False)
        batch_op.create_index('idx_forum_posts_category_id', ['category_id'], unique=False)
        batch_op.create_index('idx_forum_posts_category_type', ['category_id', 'post_type'], unique=False)
        batch_op.create_index('idx_forum_posts_comment_count', ['comment_count'], unique=False)
        batch_op.create_index('idx_forum_posts_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_forum_posts_featured_active', ['is_featured', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_posts_is_answered', ['is_answered'], unique=False)
        batch_op.create_index('idx_forum_posts_is_deleted', ['is_deleted'], unique=False)
        batch_op.create_index('idx_forum_posts_is_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_forum_posts_is_locked', ['is_locked'], unique=False)
        batch_op.create_index('idx_forum_posts_is_pinned', ['is_pinned'], unique=False)
        batch_op.create_index('idx_forum_posts_last_activity_at', ['last_activity_at'], unique=False)
        batch_op.create_index('idx_forum_posts_like_count', ['like_count'], unique=False)
        batch_op.create_index('idx_forum_posts_pinned_active', ['is_pinned', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_posts_post_type', ['post_type'], unique=False)
        batch_op.create_index('idx_forum_posts_type_answered', ['post_type', 'is_answered'], unique=False)
        batch_op.create_index('idx_forum_posts_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_forum_posts_view_count', ['view_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_posts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_posts_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_forum_posts_title'), ['title'], unique=False)

    op.create_table('game_challenge_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('current_progress', sa.Integer(), nullable=False),
    sa.Column('target_progress', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('completion_percentage', sa.Float(), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name=op.f('fk_game_challenge_participations_challenge_id_challenges'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_game_challenge_participations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_challenge_participations'))
    )
    with op.batch_alter_table('game_challenge_participations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_challenge_participations_id'), ['id'], unique=False)

    op.create_table('industry_specializations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('industry_track_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('key_skills', sa.JSON(), nullable=False),
    sa.Column('tools_and_software', sa.JSON(), nullable=False),
    sa.Column('certification_paths', sa.JSON(), nullable=True),
    sa.Column('job_market_demand', sa.String(length=20), nullable=False),
    sa.Column('average_salary_range', sa.String(length=50), nullable=True),
    sa.Column('growth_projection', sa.String(length=20), nullable=True),
    sa.Column('recommended_resources', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['industry_track_id'], ['industry_tracks.id'], name=op.f('fk_industry_specializations_industry_track_id_industry_tracks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_industry_specializations'))
    )
    with op.batch_alter_table('industry_specializations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_industry_specializations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_growth_projection'), ['growth_projection'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_industry_track_id'), ['industry_track_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_job_market_demand'), ['job_market_demand'], unique=False)
        batch_op.create_index(batch_op.f('ix_industry_specializations_name'), ['name'], unique=False)

    op.create_table('job_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('keywords', sa.String(length=500), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('experience_level', sa.String(length=20), nullable=True),
    sa.Column('salary_min', sa.Integer(), nullable=True),
    sa.Column('salary_max', sa.Integer(), nullable=True),
    sa.Column('job_type', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('frequency', sa.String(length=20), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('last_triggered', sa.DateTime(timezone=True), nullable=True),
    sa.Column('jobs_found_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_alerts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_alerts'))
    )
    with op.batch_alter_table('job_alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_alerts_id'), ['id'], unique=False)

    op.create_table('job_application_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('target_industries', sa.JSON(), nullable=True),
    sa.Column('target_job_types', sa.JSON(), nullable=True),
    sa.Column('target_experience_levels', sa.JSON(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_application_templates_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_application_templates'))
    )
    with op.batch_alter_table('job_application_templates', schema=None) as batch_op:
        batch_op.create_index('idx_template_last_used', ['last_used_at', 'user_id'], unique=False)
        batch_op.create_index('idx_template_success_rate', ['success_rate', 'usage_count'], unique=False)
        batch_op.create_index('idx_template_user_active', ['user_id', 'is_active'], unique=False)
        batch_op.create_index('idx_template_user_type', ['user_id', 'template_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_is_default'), ['is_default'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_last_used_at'), ['last_used_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_template_type'), ['template_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_application_templates_user_id'), ['user_id'], unique=False)

    op.create_table('job_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_listing_id', sa.Integer(), nullable=False),
    sa.Column('overall_match_score', sa.Float(), nullable=False),
    sa.Column('skills_match_score', sa.Float(), nullable=False),
    sa.Column('experience_match_score', sa.Float(), nullable=False),
    sa.Column('location_match_score', sa.Float(), nullable=False),
    sa.Column('salary_match_score', sa.Float(), nullable=True),
    sa.Column('matching_skills', sa.JSON(), nullable=True),
    sa.Column('missing_skills', sa.JSON(), nullable=True),
    sa.Column('match_reasoning', sa.Text(), nullable=True),
    sa.Column('application_tips', sa.JSON(), nullable=True),
    sa.Column('skill_gap_recommendations', sa.JSON(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('is_bookmarked', sa.Boolean(), nullable=False),
    sa.Column('is_dismissed', sa.Boolean(), nullable=False),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['job_listing_id'], ['job_listings.id'], name=op.f('fk_job_matches_job_listing_id_job_listings')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_matches_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_matches'))
    )
    with op.batch_alter_table('job_matches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_matches_id'), ['id'], unique=False)

    op.create_table('job_searches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('search_terms', sa.String(length=200), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('work_mode', sa.String(length=20), nullable=True),
    sa.Column('employment_type', sa.String(length=20), nullable=True),
    sa.Column('experience_level', sa.String(length=20), nullable=True),
    sa.Column('salary_min', sa.Integer(), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('is_alert_enabled', sa.Boolean(), nullable=False),
    sa.Column('alert_frequency', sa.String(length=10), nullable=False),
    sa.Column('last_alert_sent', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_search_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_searches_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_searches'))
    )
    with op.batch_alter_table('job_searches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_searches_id'), ['id'], unique=False)

    op.create_table('job_skill_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_listing_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(length=100), nullable=False),
    sa.Column('skill_level', sa.String(length=20), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['job_listing_id'], ['job_listings.id'], name=op.f('fk_job_skill_requirements_job_listing_id_job_listings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_skill_requirements'))
    )
    with op.batch_alter_table('job_skill_requirements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_skill_requirements_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_skill_requirements_skill_name'), ['skill_name'], unique=False)

    op.create_table('leaderboard_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('leaderboard_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('previous_rank', sa.Integer(), nullable=True),
    sa.Column('rank_change', sa.Integer(), nullable=False),
    sa.Column('additional_metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['leaderboard_id'], ['leaderboards.id'], name=op.f('fk_leaderboard_entries_leaderboard_id_leaderboards'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_leaderboard_entries_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_leaderboard_entries'))
    )
    with op.batch_alter_table('leaderboard_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_leaderboard_entries_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_leaderboard_entries_rank'), ['rank'], unique=False)

    op.create_table('learning_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('goal_type', sa.String(length=30), nullable=False),
    sa.Column('target_skill', sa.String(length=100), nullable=True),
    sa.Column('target_level', sa.Integer(), nullable=True),
    sa.Column('target_certification', sa.String(length=100), nullable=True),
    sa.Column('target_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_hours', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('milestones', sa.JSON(), nullable=True),
    sa.Column('completed_milestones', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('priority', sa.String(length=10), nullable=False),
    sa.Column('recommended_path', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_learning_goals_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_learning_goals')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('learning_goals', schema=None) as batch_op:
        batch_op.create_index('idx_learning_goals_active_target_date', ['status', 'target_date', 'priority'], unique=False)
        batch_op.create_index('idx_learning_goals_completed_at', ['completed_at'], unique=False)
        batch_op.create_index('idx_learning_goals_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_learning_goals_goal_type', ['goal_type'], unique=False)
        batch_op.create_index('idx_learning_goals_priority', ['priority'], unique=False)
        batch_op.create_index('idx_learning_goals_progress_percentage', ['progress_percentage'], unique=False)
        batch_op.create_index('idx_learning_goals_status', ['status'], unique=False)
        batch_op.create_index('idx_learning_goals_status_priority', ['status', 'priority'], unique=False)
        batch_op.create_index('idx_learning_goals_status_target_date', ['status', 'target_date'], unique=False)
        batch_op.create_index('idx_learning_goals_target_date', ['target_date'], unique=False)
        batch_op.create_index('idx_learning_goals_target_level', ['target_level'], unique=False)
        batch_op.create_index('idx_learning_goals_target_skill', ['target_skill'], unique=False)
        batch_op.create_index('idx_learning_goals_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_learning_goals_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_learning_goals_user_priority', ['user_id', 'priority'], unique=False)
        batch_op.create_index('idx_learning_goals_user_progress', ['user_id', 'progress_percentage'], unique=False)
        batch_op.create_index('idx_learning_goals_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index('idx_learning_goals_user_type', ['user_id', 'goal_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_goals_id'), ['id'], unique=False)

    op.create_table('learning_paths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('industry_track_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('estimated_duration_hours', sa.Integer(), nullable=False),
    sa.Column('difficulty_progression', sa.JSON(), nullable=False),
    sa.Column('learning_outcomes', sa.JSON(), nullable=False),
    sa.Column('assessment_criteria', sa.JSON(), nullable=False),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['industry_track_id'], ['industry_tracks.id'], name=op.f('fk_learning_paths_industry_track_id_industry_tracks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_learning_paths'))
    )
    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_learning_paths_id'), ['id'], unique=False)

    op.create_table('mentor_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('certifications', sa.Text(), nullable=True),
    sa.Column('specializations', sa.Text(), nullable=True),
    sa.Column('mentoring_experience_years', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('max_mentees', sa.Integer(), nullable=False),
    sa.Column('current_mentees_count', sa.Integer(), nullable=False),
    sa.Column('hourly_rate', sa.Integer(), nullable=True),
    sa.Column('preferred_communication', sa.String(length=50), nullable=True),
    sa.Column('available_time_slots', sa.Text(), nullable=True),
    sa.Column('mentor_bio', sa.Text(), nullable=True),
    sa.Column('approach_description', sa.Text(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_mentor_profiles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentor_profiles')),
    sa.UniqueConstraint('user_id', name=op.f('uq_mentor_profiles_user_id'))
    )
    with op.batch_alter_table('mentor_profiles', schema=None) as batch_op:
        batch_op.create_index('idx_mentor_available_approved', ['is_available', 'is_approved'], unique=False)
        batch_op.create_index('idx_mentor_capacity', ['current_mentees_count', 'max_mentees'], unique=False)
        batch_op.create_index('idx_mentor_rate_available', ['hourly_rate', 'is_available'], unique=False)
        batch_op.create_index('idx_mentor_rating_reviews', ['average_rating', 'total_reviews'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_approved_at'), ['approved_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_average_rating'), ['average_rating'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_current_mentees_count'), ['current_mentees_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_hourly_rate'), ['hourly_rate'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_is_approved'), ['is_approved'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_is_available'), ['is_available'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_max_mentees'), ['max_mentees'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_preferred_communication'), ['preferred_communication'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentor_profiles_total_reviews'), ['total_reviews'], unique=False)

    op.create_table('mentorship_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mentee_id', sa.Integer(), nullable=False),
    sa.Column('mentor_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('mentorship_type', sa.String(length=20), nullable=False),
    sa.Column('focus_areas', sa.JSON(), nullable=False),
    sa.Column('goals', sa.JSON(), nullable=False),
    sa.Column('preferred_duration', sa.String(length=20), nullable=True),
    sa.Column('preferred_frequency', sa.String(length=20), nullable=True),
    sa.Column('preferred_communication', sa.String(length=20), nullable=True),
    sa.Column('current_experience_level', sa.String(length=20), nullable=False),
    sa.Column('background_info', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['mentee_id'], ['users.id'], name=op.f('fk_mentorship_requests_mentee_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mentor_id'], ['users.id'], name=op.f('fk_mentorship_requests_mentor_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentorship_requests')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('mentorship_requests', schema=None) as batch_op:
        batch_op.create_index('idx_mentorship_requests_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_mentorship_requests_current_experience_level', ['current_experience_level'], unique=False)
        batch_op.create_index('idx_mentorship_requests_expires_at', ['expires_at'], unique=False)
        batch_op.create_index('idx_mentorship_requests_is_public', ['is_public'], unique=False)
        batch_op.create_index('idx_mentorship_requests_mentee_id', ['mentee_id'], unique=False)
        batch_op.create_index('idx_mentorship_requests_mentee_status', ['mentee_id', 'status'], unique=False)
        batch_op.create_index('idx_mentorship_requests_mentor_id', ['mentor_id'], unique=False)
        batch_op.create_index('idx_mentorship_requests_mentorship_type', ['mentorship_type'], unique=False)
        batch_op.create_index('idx_mentorship_requests_open_public', ['status', 'is_public', 'created_at'], unique=False)
        batch_op.create_index('idx_mentorship_requests_public_created', ['is_public', 'created_at'], unique=False)
        batch_op.create_index('idx_mentorship_requests_status', ['status'], unique=False)
        batch_op.create_index('idx_mentorship_requests_status_expires', ['status', 'expires_at'], unique=False)
        batch_op.create_index('idx_mentorship_requests_status_public', ['status', 'is_public'], unique=False)
        batch_op.create_index('idx_mentorship_requests_type_experience', ['mentorship_type', 'current_experience_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentorship_requests_id'), ['id'], unique=False)

    op.create_table('mentorships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mentor_id', sa.Integer(), nullable=False),
    sa.Column('mentee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('mentorship_type', sa.String(length=20), nullable=False),
    sa.Column('goals', sa.JSON(), nullable=True),
    sa.Column('focus_areas', sa.JSON(), nullable=True),
    sa.Column('meeting_frequency', sa.String(length=20), nullable=True),
    sa.Column('session_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('total_sessions_planned', sa.Integer(), nullable=True),
    sa.Column('sessions_completed', sa.Integer(), nullable=False),
    sa.Column('communication_method', sa.String(length=20), nullable=True),
    sa.Column('progress_notes', sa.Text(), nullable=True),
    sa.Column('milestones_achieved', sa.JSON(), nullable=True),
    sa.Column('mentor_rating', sa.Integer(), nullable=True),
    sa.Column('mentee_rating', sa.Integer(), nullable=True),
    sa.Column('mentor_feedback', sa.Text(), nullable=True),
    sa.Column('mentee_feedback', sa.Text(), nullable=True),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['mentee_id'], ['users.id'], name=op.f('fk_mentorships_mentee_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mentor_id'], ['users.id'], name=op.f('fk_mentorships_mentor_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentorships')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('mentorships', schema=None) as batch_op:
        batch_op.create_index('idx_mentorships_accepted_at', ['accepted_at'], unique=False)
        batch_op.create_index('idx_mentorships_active_progress', ['status', 'sessions_completed'], unique=False)
        batch_op.create_index('idx_mentorships_completed_at', ['completed_at'], unique=False)
        batch_op.create_index('idx_mentorships_mentee_id', ['mentee_id'], unique=False)
        batch_op.create_index('idx_mentorships_mentee_requested', ['mentee_id', 'requested_at'], unique=False)
        batch_op.create_index('idx_mentorships_mentee_status', ['mentee_id', 'status'], unique=False)
        batch_op.create_index('idx_mentorships_mentor_id', ['mentor_id'], unique=False)
        batch_op.create_index('idx_mentorships_mentor_requested', ['mentor_id', 'requested_at'], unique=False)
        batch_op.create_index('idx_mentorships_mentor_status', ['mentor_id', 'status'], unique=False)
        batch_op.create_index('idx_mentorships_mentorship_type', ['mentorship_type'], unique=False)
        batch_op.create_index('idx_mentorships_requested_at', ['requested_at'], unique=False)
        batch_op.create_index('idx_mentorships_sessions_completed', ['sessions_completed'], unique=False)
        batch_op.create_index('idx_mentorships_status', ['status'], unique=False)
        batch_op.create_index('idx_mentorships_status_type', ['status', 'mentorship_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentorships_id'), ['id'], unique=False)

    op.create_table('point_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('transaction_metadata', sa.JSON(), nullable=True),
    sa.Column('balance_before', sa.Integer(), nullable=False),
    sa.Column('balance_after', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_point_transactions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_point_transactions'))
    )
    with op.batch_alter_table('point_transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_point_transactions_id'), ['id'], unique=False)

    op.create_table('portfolios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('public_url_slug', sa.String(length=100), nullable=True),
    sa.Column('sections_order', sa.JSON(), nullable=True),
    sa.Column('custom_sections', sa.JSON(), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('color_scheme', sa.String(length=20), nullable=False),
    sa.Column('font_style', sa.String(length=30), nullable=False),
    sa.Column('contact_email', sa.String(length=100), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('github_url', sa.String(length=255), nullable=True),
    sa.Column('last_exported_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_portfolios_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolios')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.create_index('idx_portfolios_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_portfolios_is_default', ['is_default'], unique=False)
        batch_op.create_index('idx_portfolios_is_public', ['is_public'], unique=False)
        batch_op.create_index('idx_portfolios_last_exported_at', ['last_exported_at'], unique=False)
        batch_op.create_index('idx_portfolios_public_theme', ['is_public', 'theme'], unique=False)
        batch_op.create_index('idx_portfolios_public_views', ['is_public', 'view_count'], unique=False)
        batch_op.create_index('idx_portfolios_share_count', ['share_count'], unique=False)
        batch_op.create_index('idx_portfolios_theme', ['theme'], unique=False)
        batch_op.create_index('idx_portfolios_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_portfolios_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_portfolios_user_default', ['user_id', 'is_default'], unique=False)
        batch_op.create_index('idx_portfolios_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_portfolios_user_public', ['user_id', 'is_public'], unique=False)
        batch_op.create_index('idx_portfolios_user_updated', ['user_id', 'updated_at'], unique=False)
        batch_op.create_index('idx_portfolios_view_count', ['view_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolios_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolios_public_url_slug'), ['public_url_slug'], unique=True)

    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('current_job_title', sa.String(length=100), nullable=True),
    sa.Column('company', sa.String(length=100), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('career_goals', sa.Text(), nullable=True),
    sa.Column('target_industries', sa.Text(), nullable=True),
    sa.Column('preferred_work_mode', sa.String(length=20), nullable=True),
    sa.Column('learning_style', sa.String(length=20), nullable=True),
    sa.Column('preferred_methodologies', sa.Text(), nullable=True),
    sa.Column('job_alerts_enabled', sa.Boolean(), nullable=False),
    sa.Column('auto_apply_enabled', sa.Boolean(), nullable=False),
    sa.Column('auto_apply_criteria', sa.Text(), nullable=True),
    sa.Column('max_daily_auto_applications', sa.Integer(), nullable=False),
    sa.Column('min_match_score_threshold', sa.Float(), nullable=False),
    sa.Column('preferred_job_types', sa.Text(), nullable=True),
    sa.Column('salary_expectations_min', sa.Integer(), nullable=True),
    sa.Column('salary_expectations_max', sa.Integer(), nullable=True),
    sa.Column('excluded_companies', sa.Text(), nullable=True),
    sa.Column('auto_apply_only_remote', sa.Boolean(), nullable=False),
    sa.Column('require_manual_approval', sa.Boolean(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('github_url', sa.String(length=255), nullable=True),
    sa.Column('portfolio_url', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.Column('completion_percentage', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profiles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profiles')),
    sa.UniqueConstraint('user_id', name=op.f('uq_profiles_user_id'))
    )
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.create_index('idx_profile_approval_auto', ['require_manual_approval', 'auto_apply_enabled'], unique=False)
        batch_op.create_index('idx_profile_auto_apply', ['auto_apply_enabled', 'job_alerts_enabled'], unique=False)
        batch_op.create_index('idx_profile_company_experience', ['company', 'years_of_experience'], unique=False)
        batch_op.create_index('idx_profile_completion_mode', ['is_complete', 'preferred_work_mode'], unique=False)
        batch_op.create_index('idx_profile_experience_title', ['years_of_experience', 'current_job_title'], unique=False)
        batch_op.create_index('idx_profile_location', ['country', 'city'], unique=False)
        batch_op.create_index('idx_profile_remote_auto', ['auto_apply_only_remote', 'auto_apply_enabled'], unique=False)
        batch_op.create_index('idx_profile_salary_auto', ['salary_expectations_min', 'auto_apply_enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_auto_apply_enabled'), ['auto_apply_enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_auto_apply_only_remote'), ['auto_apply_only_remote'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_company'), ['company'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_completion_percentage'), ['completion_percentage'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_current_job_title'), ['current_job_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_is_complete'), ['is_complete'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_job_alerts_enabled'), ['job_alerts_enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_learning_style'), ['learning_style'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_preferred_work_mode'), ['preferred_work_mode'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_require_manual_approval'), ['require_manual_approval'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_salary_expectations_max'), ['salary_expectations_max'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_salary_expectations_min'), ['salary_expectations_min'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_timezone'), ['timezone'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_profiles_years_of_experience'), ['years_of_experience'], unique=False)

    op.create_table('project_simulations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('industry_track_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('methodology', sa.Enum('AGILE', 'SCRUM', 'WATERFALL', 'PRINCE2', 'HYBRID', 'KANBAN', name='projectmethodology'), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('estimated_duration_hours', sa.Integer(), nullable=False),
    sa.Column('team_size', sa.Integer(), nullable=False),
    sa.Column('budget', sa.Integer(), nullable=True),
    sa.Column('stakeholders', sa.JSON(), nullable=True),
    sa.Column('constraints', sa.JSON(), nullable=True),
    sa.Column('objectives', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', 'ABANDONED', name='projectstatus'), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('current_phase', sa.String(length=50), nullable=True),
    sa.Column('ai_feedback_score', sa.Float(), nullable=True),
    sa.Column('ai_feedback_summary', sa.Text(), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_duration_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['industry_track_id'], ['industry_tracks.id'], name=op.f('fk_project_simulations_industry_track_id_industry_tracks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_project_simulations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_simulations')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('project_simulations', schema=None) as batch_op:
        batch_op.create_index('idx_project_simulations_active_progress', ['status', 'progress_percentage'], unique=False)
        batch_op.create_index('idx_project_simulations_ai_feedback_score', ['ai_feedback_score'], unique=False)
        batch_op.create_index('idx_project_simulations_completed_at', ['completed_at'], unique=False)
        batch_op.create_index('idx_project_simulations_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_project_simulations_current_phase', ['current_phase'], unique=False)
        batch_op.create_index('idx_project_simulations_difficulty_level', ['difficulty_level'], unique=False)
        batch_op.create_index('idx_project_simulations_estimated_duration_hours', ['estimated_duration_hours'], unique=False)
        batch_op.create_index('idx_project_simulations_industry_track_id', ['industry_track_id'], unique=False)
        batch_op.create_index('idx_project_simulations_methodology', ['methodology'], unique=False)
        batch_op.create_index('idx_project_simulations_progress_percentage', ['progress_percentage'], unique=False)
        batch_op.create_index('idx_project_simulations_started_at', ['started_at'], unique=False)
        batch_op.create_index('idx_project_simulations_status', ['status'], unique=False)
        batch_op.create_index('idx_project_simulations_status_methodology', ['status', 'methodology'], unique=False)
        batch_op.create_index('idx_project_simulations_track_difficulty', ['industry_track_id', 'difficulty_level'], unique=False)
        batch_op.create_index('idx_project_simulations_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_project_simulations_user_completed', ['user_id', 'completed_at'], unique=False)
        batch_op.create_index('idx_project_simulations_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_project_simulations_user_progress', ['user_id', 'progress_percentage'], unique=False)
        batch_op.create_index('idx_project_simulations_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index('idx_project_simulations_user_track', ['user_id', 'industry_track_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_simulations_id'), ['id'], unique=False)

    op.create_table('project_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('industry_track_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('methodology', sa.Enum('AGILE', 'SCRUM', 'WATERFALL', 'PRINCE2', 'HYBRID', 'KANBAN', name='projectmethodology'), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('phases_template', sa.JSON(), nullable=False),
    sa.Column('stakeholders_template', sa.JSON(), nullable=False),
    sa.Column('constraints_template', sa.JSON(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['industry_track_id'], ['industry_tracks.id'], name=op.f('fk_project_templates_industry_track_id_industry_tracks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_templates')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('project_templates', schema=None) as batch_op:
        batch_op.create_index('idx_project_templates_active_rating', ['is_active', 'average_rating'], unique=False)
        batch_op.create_index('idx_project_templates_active_usage', ['is_active', 'usage_count'], unique=False)
        batch_op.create_index('idx_project_templates_average_rating', ['average_rating'], unique=False)
        batch_op.create_index('idx_project_templates_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_project_templates_difficulty_level', ['difficulty_level'], unique=False)
        batch_op.create_index('idx_project_templates_industry_track_id', ['industry_track_id'], unique=False)
        batch_op.create_index('idx_project_templates_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_project_templates_methodology', ['methodology'], unique=False)
        batch_op.create_index('idx_project_templates_methodology_difficulty', ['methodology', 'difficulty_level'], unique=False)
        batch_op.create_index('idx_project_templates_track_active', ['industry_track_id', 'is_active'], unique=False)
        batch_op.create_index('idx_project_templates_track_difficulty', ['industry_track_id', 'difficulty_level'], unique=False)
        batch_op.create_index('idx_project_templates_track_usage', ['industry_track_id', 'usage_count'], unique=False)
        batch_op.create_index('idx_project_templates_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_project_templates_usage_count', ['usage_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_templates_id'), ['id'], unique=False)

    op.create_table('saved_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(length=200), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('job_url', sa.String(length=1000), nullable=False),
    sa.Column('job_data', sa.Text(), nullable=True),
    sa.Column('source_platform', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('saved_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_saved_jobs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_saved_jobs')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('saved_jobs', schema=None) as batch_op:
        batch_op.create_index('idx_saved_jobs_company_name', ['company_name'], unique=False)
        batch_op.create_index('idx_saved_jobs_saved_at', ['saved_at'], unique=False)
        batch_op.create_index('idx_saved_jobs_source_platform', ['source_platform'], unique=False)
        batch_op.create_index('idx_saved_jobs_user_company', ['user_id', 'company_name'], unique=False)
        batch_op.create_index('idx_saved_jobs_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_saved_jobs_user_saved', ['user_id', 'saved_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saved_jobs_id'), ['id'], unique=False)

    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('aliases', sa.JSON(), nullable=True),
    sa.Column('related_skills', sa.JSON(), nullable=True),
    sa.Column('difficulty_to_learn', sa.Integer(), nullable=False),
    sa.Column('market_demand', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['skill_categories.id'], name=op.f('fk_skills_category_id_skill_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skills'))
    )
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skills_id'), ['id'], unique=False)

    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('badge_icon_url', sa.String(length=500), nullable=True),
    sa.Column('points_awarded', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('current_progress', sa.Integer(), nullable=False),
    sa.Column('target_progress', sa.Integer(), nullable=False),
    sa.Column('is_unlocked', sa.Boolean(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_achievements_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_achievements'))
    )
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_achievements_id'), ['id'], unique=False)

    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('target', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], name=op.f('fk_user_badges_badge_id_badges'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_badges_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_badges'))
    )
    with op.batch_alter_table('user_badges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_badges_id'), ['id'], unique=False)

    op.create_table('user_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=False),
    sa.Column('current_xp', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=False),
    sa.Column('xp_to_next_level', sa.Integer(), nullable=False),
    sa.Column('learning_level', sa.Integer(), nullable=False),
    sa.Column('project_level', sa.Integer(), nullable=False),
    sa.Column('cv_level', sa.Integer(), nullable=False),
    sa.Column('job_level', sa.Integer(), nullable=False),
    sa.Column('current_title', sa.String(length=100), nullable=False),
    sa.Column('unlocked_titles', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_levels_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_levels')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_levels_user_id'))
    )
    with op.batch_alter_table('user_levels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_levels_id'), ['id'], unique=False)

    op.create_table('user_module_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('quiz_score', sa.Float(), nullable=True),
    sa.Column('certificate_url', sa.String(length=500), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['learning_modules.id'], name=op.f('fk_user_module_progress_module_id_learning_modules'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_module_progress_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_module_progress'))
    )
    with op.batch_alter_table('user_module_progress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_module_progress_id'), ['id'], unique=False)

    op.create_table('user_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('available_points', sa.Integer(), nullable=False),
    sa.Column('lifetime_points', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=False),
    sa.Column('points_to_next_level', sa.Integer(), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('last_activity_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_points_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_points')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_points_user_id'))
    )
    with op.batch_alter_table('user_points', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_points_id'), ['id'], unique=False)

    op.create_table('user_streaks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('streak_type', sa.Enum('DAILY_LOGIN', 'LEARNING', 'PROJECT_WORK', 'JOB_APPLICATIONS', 'CV_UPDATES', name='streaktype'), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('last_activity_date', sa.Date(), nullable=True),
    sa.Column('streak_start_date', sa.Date(), nullable=True),
    sa.Column('longest_streak_start', sa.Date(), nullable=True),
    sa.Column('longest_streak_end', sa.Date(), nullable=True),
    sa.Column('streak_milestones', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_streaks_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_streaks'))
    )
    with op.batch_alter_table('user_streaks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_streaks_id'), ['id'], unique=False)

    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('achievement_type', sa.String(length=30), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('badge_icon_url', sa.String(length=500), nullable=True),
    sa.Column('badge_color', sa.String(length=20), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_source', sa.String(length=100), nullable=True),
    sa.Column('verification_url', sa.String(length=500), nullable=True),
    sa.Column('earned_from_simulation', sa.Boolean(), nullable=False),
    sa.Column('source_simulation_id', sa.Integer(), nullable=True),
    sa.Column('criteria_met', sa.JSON(), nullable=True),
    sa.Column('points_awarded', sa.Integer(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name=op.f('fk_achievements_portfolio_id_portfolios')),
    sa.ForeignKeyConstraint(['source_simulation_id'], ['project_simulations.id'], name=op.f('fk_achievements_source_simulation_id_project_simulations')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_achievements_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievements')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.create_index('idx_achievements_achievement_type', ['achievement_type'], unique=False)
        batch_op.create_index('idx_achievements_category', ['category'], unique=False)
        batch_op.create_index('idx_achievements_difficulty_level', ['difficulty_level'], unique=False)
        batch_op.create_index('idx_achievements_display_order', ['display_order'], unique=False)
        batch_op.create_index('idx_achievements_earned_at', ['earned_at'], unique=False)
        batch_op.create_index('idx_achievements_earned_from_simulation', ['earned_from_simulation'], unique=False)
        batch_op.create_index('idx_achievements_is_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_achievements_is_public', ['is_public'], unique=False)
        batch_op.create_index('idx_achievements_is_verified', ['is_verified'], unique=False)
        batch_op.create_index('idx_achievements_points_awarded', ['points_awarded'], unique=False)
        batch_op.create_index('idx_achievements_portfolio_featured', ['portfolio_id', 'is_featured'], unique=False)
        batch_op.create_index('idx_achievements_portfolio_id', ['portfolio_id'], unique=False)
        batch_op.create_index('idx_achievements_source_simulation_id', ['source_simulation_id'], unique=False)
        batch_op.create_index('idx_achievements_type_difficulty', ['achievement_type', 'difficulty_level'], unique=False)
        batch_op.create_index('idx_achievements_user_category', ['user_id', 'category'], unique=False)
        batch_op.create_index('idx_achievements_user_earned', ['user_id', 'earned_at'], unique=False)
        batch_op.create_index('idx_achievements_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_achievements_user_public', ['user_id', 'is_public'], unique=False)
        batch_op.create_index('idx_achievements_user_type', ['user_id', 'achievement_type'], unique=False)
        batch_op.create_index('idx_achievements_verified_public', ['is_verified', 'is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_achievements_id'), ['id'], unique=False)

    op.create_table('ai_coaching_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.String(length=50), nullable=False),
    sa.Column('topic', sa.String(length=200), nullable=False),
    sa.Column('user_input', sa.Text(), nullable=True),
    sa.Column('ai_response', sa.Text(), nullable=False),
    sa.Column('has_voice_narration', sa.Boolean(), nullable=False),
    sa.Column('voice_file_url', sa.String(length=500), nullable=True),
    sa.Column('voice_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('user_satisfaction_rating', sa.Integer(), nullable=True),
    sa.Column('learning_progress_impact', sa.Float(), nullable=True),
    sa.Column('session_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project_simulations.id'], name=op.f('fk_ai_coaching_sessions_project_id_project_simulations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_coaching_sessions')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('ai_coaching_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_ai_coaching_sessions_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_has_voice_narration', ['has_voice_narration'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_learning_progress_impact', ['learning_progress_impact'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_project_created', ['project_id', 'created_at'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_project_id', ['project_id'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_project_impact', ['project_id', 'learning_progress_impact'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_project_type', ['project_id', 'session_type'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_session_duration_minutes', ['session_duration_minutes'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_session_type', ['session_type'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_type_rating', ['session_type', 'user_satisfaction_rating'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_user_satisfaction_rating', ['user_satisfaction_rating'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_voice_duration', ['has_voice_narration', 'voice_duration_seconds'], unique=False)
        batch_op.create_index('idx_ai_coaching_sessions_voice_duration_seconds', ['voice_duration_seconds'], unique=False)
        batch_op.create_index(batch_op.f('ix_ai_coaching_sessions_id'), ['id'], unique=False)

    op.create_table('certifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('certification_name', sa.String(length=200), nullable=False),
    sa.Column('issuing_organization', sa.String(length=100), nullable=False),
    sa.Column('credential_id', sa.String(length=100), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('does_not_expire', sa.Boolean(), nullable=False),
    sa.Column('verification_url', sa.String(length=500), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_certifications_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certifications'))
    )
    with op.batch_alter_table('certifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_certifications_id'), ['id'], unique=False)

    op.create_table('cv_exports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('format', sa.String(length=10), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('include_photo', sa.Boolean(), nullable=False),
    sa.Column('custom_styling', sa.JSON(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_cv_exports_cv_id_cvs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_cv_exports_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cv_exports'))
    )
    with op.batch_alter_table('cv_exports', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cv_exports_id'), ['id'], unique=False)

    op.create_table('cv_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=200), nullable=False),
    sa.Column('project_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('technologies_used', sa.JSON(), nullable=True),
    sa.Column('methodologies_used', sa.JSON(), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=True),
    sa.Column('role_in_project', sa.String(length=100), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('duration_description', sa.String(length=50), nullable=True),
    sa.Column('key_achievements', sa.JSON(), nullable=True),
    sa.Column('metrics_and_impact', sa.Text(), nullable=True),
    sa.Column('project_url', sa.String(length=500), nullable=True),
    sa.Column('github_url', sa.String(length=500), nullable=True),
    sa.Column('demo_url', sa.String(length=500), nullable=True),
    sa.Column('source_simulation_id', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_cv_projects_cv_id_cvs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_simulation_id'], ['project_simulations.id'], name=op.f('fk_cv_projects_source_simulation_id_project_simulations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cv_projects'))
    )
    with op.batch_alter_table('cv_projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cv_projects_id'), ['id'], unique=False)

    op.create_table('cv_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('section_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('is_bulleted', sa.Boolean(), nullable=False),
    sa.Column('include_dates', sa.Boolean(), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_cv_sections_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cv_sections'))
    )
    with op.batch_alter_table('cv_sections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cv_sections_id'), ['id'], unique=False)

    op.create_table('cv_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(length=50), nullable=False),
    sa.Column('skill_category', sa.String(length=30), nullable=False),
    sa.Column('proficiency_level', sa.String(length=20), nullable=True),
    sa.Column('proficiency_percentage', sa.Integer(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('highlight_skill', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_cv_skills_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cv_skills'))
    )
    with op.batch_alter_table('cv_skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cv_skills_id'), ['id'], unique=False)

    op.create_table('educations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('institution_name', sa.String(length=200), nullable=False),
    sa.Column('degree_type', sa.String(length=50), nullable=False),
    sa.Column('field_of_study', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('gpa', sa.String(length=10), nullable=True),
    sa.Column('honors', sa.String(length=100), nullable=True),
    sa.Column('relevant_coursework', sa.JSON(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.Column('thesis_title', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_educations_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_educations'))
    )
    with op.batch_alter_table('educations', schema=None) as batch_op:
        batch_op.create_index('idx_education_cv_current', ['cv_id', 'is_current'], unique=False)
        batch_op.create_index('idx_education_cv_include', ['cv_id', 'include_in_cv'], unique=False)
        batch_op.create_index('idx_education_cv_order', ['cv_id', 'display_order'], unique=False)
        batch_op.create_index('idx_education_dates_range', ['start_date', 'end_date'], unique=False)
        batch_op.create_index('idx_education_degree_field', ['degree_type', 'field_of_study'], unique=False)
        batch_op.create_index('idx_education_institution_degree', ['institution_name', 'degree_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_cv_id'), ['cv_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_degree_type'), ['degree_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_field_of_study'), ['field_of_study'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_include_in_cv'), ['include_in_cv'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_institution_name'), ['institution_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_is_current'), ['is_current'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_educations_start_date'), ['start_date'], unique=False)

    op.create_table('forum_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_format', sa.String(length=20), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('is_accepted_answer', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_forum_comments_author_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['forum_comments.id'], name='fk_forum_comment_parent', use_alter=True),
    sa.ForeignKeyConstraint(['post_id'], ['forum_posts.id'], name=op.f('fk_forum_comments_post_id_forum_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_comments')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('forum_comments', schema=None) as batch_op:
        batch_op.create_index('idx_forum_comments_author_active', ['author_id', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_comments_author_id', ['author_id'], unique=False)
        batch_op.create_index('idx_forum_comments_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_forum_comments_is_accepted_answer', ['is_accepted_answer'], unique=False)
        batch_op.create_index('idx_forum_comments_is_deleted', ['is_deleted'], unique=False)
        batch_op.create_index('idx_forum_comments_like_count', ['like_count'], unique=False)
        batch_op.create_index('idx_forum_comments_parent_active', ['parent_comment_id', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_comments_parent_comment_id', ['parent_comment_id'], unique=False)
        batch_op.create_index('idx_forum_comments_post_accepted', ['post_id', 'is_accepted_answer'], unique=False)
        batch_op.create_index('idx_forum_comments_post_active', ['post_id', 'is_deleted'], unique=False)
        batch_op.create_index('idx_forum_comments_post_created', ['post_id', 'created_at'], unique=False)
        batch_op.create_index('idx_forum_comments_post_id', ['post_id'], unique=False)
        batch_op.create_index('idx_forum_comments_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_comments_id'), ['id'], unique=False)

    op.create_table('forum_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['forum_posts.id'], name=op.f('fk_forum_likes_post_id_forum_posts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_forum_likes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_likes')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('forum_likes', schema=None) as batch_op:
        batch_op.create_index('idx_forum_likes_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_forum_likes_post_id', ['post_id'], unique=False)
        batch_op.create_index('idx_forum_likes_post_user', ['post_id', 'user_id'], unique=False)
        batch_op.create_index('idx_forum_likes_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_forum_likes_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_likes_id'), ['id'], unique=False)

    op.create_table('job_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_listing_id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('cover_letter', sa.Text(), nullable=True),
    sa.Column('customized_cv_content', sa.JSON(), nullable=True),
    sa.Column('tailored_skills', sa.JSON(), nullable=True),
    sa.Column('is_auto_applied', sa.Boolean(), nullable=False),
    sa.Column('auto_application_type', sa.String(length=20), nullable=True),
    sa.Column('hr_email_sent', sa.Boolean(), nullable=False),
    sa.Column('ceo_email_sent', sa.Boolean(), nullable=False),
    sa.Column('hr_email_opened', sa.Boolean(), nullable=False),
    sa.Column('ceo_email_opened', sa.Boolean(), nullable=False),
    sa.Column('response_received', sa.Boolean(), nullable=False),
    sa.Column('response_type', sa.String(length=20), nullable=True),
    sa.Column('response_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('interview_scheduled', sa.Boolean(), nullable=False),
    sa.Column('interview_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('interview_type', sa.String(length=20), nullable=True),
    sa.Column('final_outcome', sa.String(length=20), nullable=True),
    sa.Column('feedback_received', sa.Text(), nullable=True),
    sa.Column('salary_offered', sa.Integer(), nullable=True),
    sa.Column('user_notes', sa.Text(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('priority_level', sa.String(length=10), nullable=False),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_job_applications_cv_id_cvs')),
    sa.ForeignKeyConstraint(['job_listing_id'], ['job_listings.id'], name=op.f('fk_job_applications_job_listing_id_job_listings')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_applications_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_applications'))
    )
    with op.batch_alter_table('job_applications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_applications_id'), ['id'], unique=False)

    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('language_name', sa.String(length=50), nullable=False),
    sa.Column('proficiency_level', sa.String(length=20), nullable=False),
    sa.Column('certification_name', sa.String(length=100), nullable=True),
    sa.Column('certification_score', sa.String(length=20), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_languages_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_languages'))
    )
    with op.batch_alter_table('languages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_languages_id'), ['id'], unique=False)

    op.create_table('mentorship_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mentorship_id', sa.Integer(), nullable=False),
    sa.Column('scheduled_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('agenda', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('actual_start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('topics_covered', sa.JSON(), nullable=True),
    sa.Column('key_takeaways', sa.Text(), nullable=True),
    sa.Column('action_items', sa.JSON(), nullable=True),
    sa.Column('mentor_notes', sa.Text(), nullable=True),
    sa.Column('mentee_notes', sa.Text(), nullable=True),
    sa.Column('shared_notes', sa.Text(), nullable=True),
    sa.Column('resources_shared', sa.JSON(), nullable=True),
    sa.Column('mentor_rating', sa.Integer(), nullable=True),
    sa.Column('mentee_rating', sa.Integer(), nullable=True),
    sa.Column('session_feedback', sa.Text(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=False),
    sa.Column('next_session_suggestions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['mentorship_id'], ['mentorships.id'], name=op.f('fk_mentorship_sessions_mentorship_id_mentorships'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentorship_sessions')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('mentorship_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_mentorship_sessions_actual_start_time', ['actual_start_time'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_mentorship_created', ['mentorship_id', 'created_at'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_mentorship_id', ['mentorship_id'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_mentorship_scheduled', ['mentorship_id', 'scheduled_date'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_mentorship_status', ['mentorship_id', 'status'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_scheduled_date', ['scheduled_date'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_status', ['status'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_status_scheduled', ['status', 'scheduled_date'], unique=False)
        batch_op.create_index('idx_mentorship_sessions_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_mentorship_sessions_id'), ['id'], unique=False)

    op.create_table('project_artifacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('artifact_type', sa.Enum('GANTT_CHART', 'PROJECT_CHARTER', 'RISK_LOG', 'STATUS_REPORT', 'REQUIREMENTS_DOC', 'MEETING_MINUTES', 'BUDGET_PLAN', 'COMMUNICATION_PLAN', 'STAKEHOLDER_MATRIX', 'LESSONS_LEARNED', name='artifacttype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_url', sa.String(length=500), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('generation_prompt', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_format', sa.String(length=20), nullable=False),
    sa.Column('include_in_portfolio', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project_simulations.id'], name=op.f('fk_project_artifacts_project_id_project_simulations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_artifacts')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('project_artifacts', schema=None) as batch_op:
        batch_op.create_index('idx_project_artifacts_artifact_type', ['artifact_type'], unique=False)
        batch_op.create_index('idx_project_artifacts_content_format', ['content_format'], unique=False)
        batch_op.create_index('idx_project_artifacts_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_project_artifacts_file_size', ['file_size'], unique=False)
        batch_op.create_index('idx_project_artifacts_include_in_portfolio', ['include_in_portfolio'], unique=False)
        batch_op.create_index('idx_project_artifacts_is_ai_generated', ['is_ai_generated'], unique=False)
        batch_op.create_index('idx_project_artifacts_mime_type', ['mime_type'], unique=False)
        batch_op.create_index('idx_project_artifacts_portfolio_type', ['include_in_portfolio', 'artifact_type'], unique=False)
        batch_op.create_index('idx_project_artifacts_project_created', ['project_id', 'created_at'], unique=False)
        batch_op.create_index('idx_project_artifacts_project_id', ['project_id'], unique=False)
        batch_op.create_index('idx_project_artifacts_project_portfolio', ['project_id', 'include_in_portfolio'], unique=False)
        batch_op.create_index('idx_project_artifacts_project_type', ['project_id', 'artifact_type'], unique=False)
        batch_op.create_index('idx_project_artifacts_type_generated', ['artifact_type', 'is_ai_generated'], unique=False)
        batch_op.create_index('idx_project_artifacts_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_artifacts_id'), ['id'], unique=False)

    op.create_table('project_phases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('planned_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('planned_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('ai_phase_score', sa.Float(), nullable=True),
    sa.Column('ai_phase_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project_simulations.id'], name=op.f('fk_project_phases_project_id_project_simulations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_phases')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('project_phases', schema=None) as batch_op:
        batch_op.create_index('idx_project_phases_actual_end_date', ['actual_end_date'], unique=False)
        batch_op.create_index('idx_project_phases_actual_start_date', ['actual_start_date'], unique=False)
        batch_op.create_index('idx_project_phases_ai_phase_score', ['ai_phase_score'], unique=False)
        batch_op.create_index('idx_project_phases_completed_order', ['is_completed', 'order_index'], unique=False)
        batch_op.create_index('idx_project_phases_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_project_phases_is_completed', ['is_completed'], unique=False)
        batch_op.create_index('idx_project_phases_order_index', ['order_index'], unique=False)
        batch_op.create_index('idx_project_phases_planned_end_date', ['planned_end_date'], unique=False)
        batch_op.create_index('idx_project_phases_planned_start_date', ['planned_start_date'], unique=False)
        batch_op.create_index('idx_project_phases_progress_percentage', ['progress_percentage'], unique=False)
        batch_op.create_index('idx_project_phases_project_completed', ['project_id', 'is_completed'], unique=False)
        batch_op.create_index('idx_project_phases_project_id', ['project_id'], unique=False)
        batch_op.create_index('idx_project_phases_project_order', ['project_id', 'order_index'], unique=False)
        batch_op.create_index('idx_project_phases_project_progress', ['project_id', 'progress_percentage'], unique=False)
        batch_op.create_index('idx_project_phases_project_start', ['project_id', 'actual_start_date'], unique=False)
        batch_op.create_index('idx_project_phases_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_phases_id'), ['id'], unique=False)

    op.create_table('references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('company', sa.String(length=100), nullable=True),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('years_known', sa.Integer(), nullable=True),
    sa.Column('permission_to_contact', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_references_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_references'))
    )
    with op.batch_alter_table('references', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_references_id'), ['id'], unique=False)

    op.create_table('skill_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(length=100), nullable=False),
    sa.Column('skill_category', sa.String(length=30), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=False),
    sa.Column('previous_level', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('assessment_type', sa.String(length=30), nullable=False),
    sa.Column('evidence_sources', sa.JSON(), nullable=True),
    sa.Column('ai_feedback', sa.Text(), nullable=True),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True),
    sa.Column('recommended_resources', sa.JSON(), nullable=True),
    sa.Column('progress_trend', sa.String(length=20), nullable=True),
    sa.Column('next_milestone', sa.String(length=200), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_project_id', sa.Integer(), nullable=True),
    sa.Column('assessed_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_skill_assessments_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['verification_project_id'], ['project_simulations.id'], name=op.f('fk_skill_assessments_verification_project_id_project_simulations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skill_assessments')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('skill_assessments', schema=None) as batch_op:
        batch_op.create_index('idx_skill_assessments_assessed_at', ['assessed_at'], unique=False)
        batch_op.create_index('idx_skill_assessments_assessment_type', ['assessment_type'], unique=False)
        batch_op.create_index('idx_skill_assessments_category_level', ['skill_category', 'current_level'], unique=False)
        batch_op.create_index('idx_skill_assessments_confidence_score', ['confidence_score'], unique=False)
        batch_op.create_index('idx_skill_assessments_current_level', ['current_level'], unique=False)
        batch_op.create_index('idx_skill_assessments_is_verified', ['is_verified'], unique=False)
        batch_op.create_index('idx_skill_assessments_progress_trend', ['progress_trend'], unique=False)
        batch_op.create_index('idx_skill_assessments_skill_category', ['skill_category'], unique=False)
        batch_op.create_index('idx_skill_assessments_skill_name', ['skill_name'], unique=False)
        batch_op.create_index('idx_skill_assessments_type_verified', ['assessment_type', 'is_verified'], unique=False)
        batch_op.create_index('idx_skill_assessments_user_assessed', ['user_id', 'assessed_at'], unique=False)
        batch_op.create_index('idx_skill_assessments_user_category', ['user_id', 'skill_category'], unique=False)
        batch_op.create_index('idx_skill_assessments_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_skill_assessments_user_level', ['user_id', 'current_level'], unique=False)
        batch_op.create_index('idx_skill_assessments_user_skill', ['user_id', 'skill_name'], unique=False)
        batch_op.create_index('idx_skill_assessments_verification_project_id', ['verification_project_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_skill_assessments_id'), ['id'], unique=False)

    op.create_table('testimonials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('recommender_name', sa.String(length=100), nullable=False),
    sa.Column('recommender_title', sa.String(length=100), nullable=True),
    sa.Column('recommender_company', sa.String(length=100), nullable=True),
    sa.Column('recommender_relationship', sa.String(length=50), nullable=False),
    sa.Column('recommender_email', sa.String(length=100), nullable=True),
    sa.Column('recommender_linkedin', sa.String(length=255), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('project_context', sa.String(length=200), nullable=True),
    sa.Column('collaboration_duration', sa.String(length=50), nullable=True),
    sa.Column('source', sa.String(length=20), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_of_collaboration', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name=op.f('fk_testimonials_portfolio_id_portfolios')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_testimonials_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_testimonials')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('testimonials', schema=None) as batch_op:
        batch_op.create_index('idx_testimonials_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_testimonials_date_of_collaboration', ['date_of_collaboration'], unique=False)
        batch_op.create_index('idx_testimonials_display_order', ['display_order'], unique=False)
        batch_op.create_index('idx_testimonials_is_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_testimonials_is_public', ['is_public'], unique=False)
        batch_op.create_index('idx_testimonials_is_verified', ['is_verified'], unique=False)
        batch_op.create_index('idx_testimonials_portfolio_featured', ['portfolio_id', 'is_featured'], unique=False)
        batch_op.create_index('idx_testimonials_portfolio_id', ['portfolio_id'], unique=False)
        batch_op.create_index('idx_testimonials_rating', ['rating'], unique=False)
        batch_op.create_index('idx_testimonials_rating_public', ['rating', 'is_public'], unique=False)
        batch_op.create_index('idx_testimonials_recommender_relationship', ['recommender_relationship'], unique=False)
        batch_op.create_index('idx_testimonials_relationship_verified', ['recommender_relationship', 'is_verified'], unique=False)
        batch_op.create_index('idx_testimonials_source', ['source'], unique=False)
        batch_op.create_index('idx_testimonials_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_testimonials_user_public', ['user_id', 'is_public'], unique=False)
        batch_op.create_index('idx_testimonials_user_verified', ['user_id', 'is_verified'], unique=False)
        batch_op.create_index('idx_testimonials_verified_public', ['is_verified', 'is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_testimonials_id'), ['id'], unique=False)

    op.create_table('user_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(length=50), nullable=False),
    sa.Column('skill_category', sa.String(length=30), nullable=False),
    sa.Column('proficiency_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='skilllevel'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verified_by_project', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name=op.f('fk_user_skills_profile_id_profiles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_skills'))
    )
    with op.batch_alter_table('user_skills', schema=None) as batch_op:
        batch_op.create_index('idx_skill_category_verified', ['skill_category', 'is_verified'], unique=False)
        batch_op.create_index('idx_skill_name_level', ['skill_name', 'proficiency_level'], unique=False)
        batch_op.create_index('idx_skill_profile_category', ['profile_id', 'skill_category'], unique=False)
        batch_op.create_index('idx_skill_profile_verified', ['profile_id', 'is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_is_verified'), ['is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_proficiency_level'), ['proficiency_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_profile_id'), ['profile_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_skill_category'), ['skill_category'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_skills_skill_name'), ['skill_name'], unique=False)

    op.create_table('work_experiences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(length=100), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('employment_type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('key_achievements', sa.JSON(), nullable=True),
    sa.Column('technologies_used', sa.JSON(), nullable=True),
    sa.Column('team_size_managed', sa.Integer(), nullable=True),
    sa.Column('budget_managed', sa.Integer(), nullable=True),
    sa.Column('projects_delivered', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('include_in_cv', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_work_experiences_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work_experiences'))
    )
    with op.batch_alter_table('work_experiences', schema=None) as batch_op:
        batch_op.create_index('idx_work_company_title', ['company_name', 'job_title'], unique=False)
        batch_op.create_index('idx_work_cv_current', ['cv_id', 'is_current'], unique=False)
        batch_op.create_index('idx_work_cv_include', ['cv_id', 'include_in_cv'], unique=False)
        batch_op.create_index('idx_work_cv_order', ['cv_id', 'display_order'], unique=False)
        batch_op.create_index('idx_work_dates_range', ['start_date', 'end_date'], unique=False)
        batch_op.create_index('idx_work_type_location', ['employment_type', 'location'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_company_name'), ['company_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_cv_id'), ['cv_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_employment_type'), ['employment_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_include_in_cv'), ['include_in_cv'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_is_current'), ['is_current'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_job_title'), ['job_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_projects_delivered'), ['projects_delivered'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_start_date'), ['start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_experiences_team_size_managed'), ['team_size_managed'], unique=False)

    op.create_table('forum_comment_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['forum_comments.id'], name=op.f('fk_forum_comment_likes_comment_id_forum_comments'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_forum_comment_likes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_comment_likes')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('forum_comment_likes', schema=None) as batch_op:
        batch_op.create_index('idx_forum_comment_likes_comment_id', ['comment_id'], unique=False)
        batch_op.create_index('idx_forum_comment_likes_comment_user', ['comment_id', 'user_id'], unique=False)
        batch_op.create_index('idx_forum_comment_likes_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_forum_comment_likes_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_forum_comment_likes_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_comment_likes_id'), ['id'], unique=False)

    op.create_table('pending_auto_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_listing_id', sa.Integer(), nullable=True),
    sa.Column('external_job_id', sa.String(length=255), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('job_url', sa.String(length=500), nullable=True),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('salary_range', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('employment_type', sa.String(length=50), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=False),
    sa.Column('match_reasons', sa.JSON(), nullable=True),
    sa.Column('auto_apply_score', sa.Float(), nullable=False),
    sa.Column('generated_cover_letter', sa.Text(), nullable=True),
    sa.Column('cv_customizations', sa.JSON(), nullable=True),
    sa.Column('application_summary', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'SUBMITTED', 'FAILED', 'EXPIRED', name='autoapplicationstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_decision', sa.String(length=20), nullable=True),
    sa.Column('user_decision_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('submitted_application_id', sa.Integer(), nullable=True),
    sa.Column('submission_result', sa.JSON(), nullable=True),
    sa.Column('submission_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['job_listing_id'], ['job_listings.id'], name=op.f('fk_pending_auto_applications_job_listing_id_job_listings')),
    sa.ForeignKeyConstraint(['submitted_application_id'], ['job_applications.id'], name=op.f('fk_pending_auto_applications_submitted_application_id_job_applications')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_pending_auto_applications_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pending_auto_applications'))
    )
    with op.batch_alter_table('pending_auto_applications', schema=None) as batch_op:
        batch_op.create_index('idx_pending_company_user', ['company_name', 'user_id'], unique=False)
        batch_op.create_index('idx_pending_decision_time', ['user_decision', 'user_decision_at'], unique=False)
        batch_op.create_index('idx_pending_expires_status', ['expires_at', 'status'], unique=False)
        batch_op.create_index('idx_pending_match_score', ['match_score', 'status'], unique=False)
        batch_op.create_index('idx_pending_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_pending_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_auto_apply_score'), ['auto_apply_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_company_name'), ['company_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_external_job_id'), ['external_job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_job_listing_id'), ['job_listing_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_job_title'), ['job_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_match_score'), ['match_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_processed_at'), ['processed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_user_decision'), ['user_decision'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_user_decision_at'), ['user_decision_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_pending_auto_applications_user_id'), ['user_id'], unique=False)

    op.create_table('portfolio_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('item_type', sa.String(length=30), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_format', sa.String(length=20), nullable=False),
    sa.Column('featured_image_url', sa.String(length=500), nullable=True),
    sa.Column('gallery_images', sa.JSON(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('technologies_used', sa.JSON(), nullable=True),
    sa.Column('methodologies_used', sa.JSON(), nullable=True),
    sa.Column('project_duration', sa.String(length=50), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=True),
    sa.Column('role_description', sa.Text(), nullable=True),
    sa.Column('key_outcomes', sa.JSON(), nullable=True),
    sa.Column('metrics_achieved', sa.JSON(), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('project_url', sa.String(length=500), nullable=True),
    sa.Column('demo_url', sa.String(length=500), nullable=True),
    sa.Column('github_url', sa.String(length=500), nullable=True),
    sa.Column('documentation_url', sa.String(length=500), nullable=True),
    sa.Column('source_type', sa.String(length=20), nullable=True),
    sa.Column('source_simulation_id', sa.Integer(), nullable=True),
    sa.Column('source_artifact_id', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name=op.f('fk_portfolio_items_portfolio_id_portfolios'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_artifact_id'], ['project_artifacts.id'], name=op.f('fk_portfolio_items_source_artifact_id_project_artifacts')),
    sa.ForeignKeyConstraint(['source_simulation_id'], ['project_simulations.id'], name=op.f('fk_portfolio_items_source_simulation_id_project_simulations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolio_items')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('portfolio_items', schema=None) as batch_op:
        batch_op.create_index('idx_portfolio_items_category', ['category'], unique=False)
        batch_op.create_index('idx_portfolio_items_completion_date', ['completion_date'], unique=False)
        batch_op.create_index('idx_portfolio_items_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_portfolio_items_display_order', ['display_order'], unique=False)
        batch_op.create_index('idx_portfolio_items_featured_visible', ['is_featured', 'is_visible'], unique=False)
        batch_op.create_index('idx_portfolio_items_is_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_portfolio_items_is_visible', ['is_visible'], unique=False)
        batch_op.create_index('idx_portfolio_items_item_type', ['item_type'], unique=False)
        batch_op.create_index('idx_portfolio_items_portfolio_featured', ['portfolio_id', 'is_featured'], unique=False)
        batch_op.create_index('idx_portfolio_items_portfolio_id', ['portfolio_id'], unique=False)
        batch_op.create_index('idx_portfolio_items_portfolio_order', ['portfolio_id', 'display_order'], unique=False)
        batch_op.create_index('idx_portfolio_items_portfolio_type', ['portfolio_id', 'item_type'], unique=False)
        batch_op.create_index('idx_portfolio_items_portfolio_visible', ['portfolio_id', 'is_visible'], unique=False)
        batch_op.create_index('idx_portfolio_items_source_simulation_id', ['source_simulation_id'], unique=False)
        batch_op.create_index('idx_portfolio_items_source_type', ['source_type'], unique=False)
        batch_op.create_index('idx_portfolio_items_type_category', ['item_type', 'category'], unique=False)
        batch_op.create_index('idx_portfolio_items_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_portfolio_items_visible_order', ['is_visible', 'display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolio_items_id'), ['id'], unique=False)

    op.create_table('project_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('estimated_hours', sa.Integer(), nullable=True),
    sa.Column('actual_hours', sa.Integer(), nullable=True),
    sa.Column('assigned_team_member', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('depends_on_task_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['phase_id'], ['project_phases.id'], name=op.f('fk_project_tasks_phase_id_project_phases'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_tasks')),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('project_tasks', schema=None) as batch_op:
        batch_op.create_index('idx_project_tasks_actual_hours', ['actual_hours'], unique=False)
        batch_op.create_index('idx_project_tasks_assigned_completed', ['assigned_team_member', 'is_completed'], unique=False)
        batch_op.create_index('idx_project_tasks_assigned_team_member', ['assigned_team_member'], unique=False)
        batch_op.create_index('idx_project_tasks_completed_at', ['completed_at'], unique=False)
        batch_op.create_index('idx_project_tasks_completed_priority', ['is_completed', 'priority'], unique=False)
        batch_op.create_index('idx_project_tasks_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_project_tasks_estimated_hours', ['estimated_hours'], unique=False)
        batch_op.create_index('idx_project_tasks_is_completed', ['is_completed'], unique=False)
        batch_op.create_index('idx_project_tasks_order_index', ['order_index'], unique=False)
        batch_op.create_index('idx_project_tasks_phase_completed', ['phase_id', 'is_completed'], unique=False)
        batch_op.create_index('idx_project_tasks_phase_id', ['phase_id'], unique=False)
        batch_op.create_index('idx_project_tasks_phase_order', ['phase_id', 'order_index'], unique=False)
        batch_op.create_index('idx_project_tasks_phase_priority', ['phase_id', 'priority'], unique=False)
        batch_op.create_index('idx_project_tasks_priority', ['priority'], unique=False)
        batch_op.create_index('idx_project_tasks_updated_at', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_project_tasks_id'), ['id'], unique=False)

    op.create_table('auto_application_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pending_application_id', sa.Integer(), nullable=True),
    sa.Column('job_application_id', sa.Integer(), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('activity_description', sa.Text(), nullable=False),
    sa.Column('activity_data', sa.JSON(), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['job_application_id'], ['job_applications.id'], name=op.f('fk_auto_application_logs_job_application_id_job_applications')),
    sa.ForeignKeyConstraint(['pending_application_id'], ['pending_auto_applications.id'], name=op.f('fk_auto_application_logs_pending_application_id_pending_auto_applications')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_auto_application_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auto_application_logs'))
    )
    with op.batch_alter_table('auto_application_logs', schema=None) as batch_op:
        batch_op.create_index('idx_log_company_activity', ['company_name', 'activity_type'], unique=False)
        batch_op.create_index('idx_log_match_score', ['match_score', 'success'], unique=False)
        batch_op.create_index('idx_log_success_activity', ['success', 'activity_type'], unique=False)
        batch_op.create_index('idx_log_user_activity', ['user_id', 'activity_type'], unique=False)
        batch_op.create_index('idx_log_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_activity_type'), ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_company_name'), ['company_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_job_title'), ['job_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_match_score'), ['match_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_success'), ['success'], unique=False)
        batch_op.create_index(batch_op.f('ix_auto_application_logs_user_id'), ['user_id'], unique=False)

    op.create_table('job_match_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pending_application_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.Enum('NEW_MATCH', 'APPLICATION_READY', 'APPROVAL_REQUIRED', 'APPLICATION_SUBMITTED', 'APPLICATION_FAILED', name='jobmatchnotificationtype'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('action_url', sa.String(length=500), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_actioned', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_sent', sa.Boolean(), nullable=False),
    sa.Column('email_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actioned_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['pending_application_id'], ['pending_auto_applications.id'], name=op.f('fk_job_match_notifications_pending_application_id_pending_auto_applications')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_job_match_notifications_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_match_notifications'))
    )
    with op.batch_alter_table('job_match_notifications', schema=None) as batch_op:
        batch_op.create_index('idx_notification_company_type', ['company_name', 'notification_type'], unique=False)
        batch_op.create_index('idx_notification_email', ['email_sent', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_expires', ['expires_at', 'is_actioned'], unique=False)
        batch_op.create_index('idx_notification_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_notification_user_type', ['user_id', 'notification_type'], unique=False)
        batch_op.create_index('idx_notification_user_unread', ['user_id', 'is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_actioned_at'), ['actioned_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_company_name'), ['company_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_email_sent'), ['email_sent'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_is_actioned'), ['is_actioned'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_job_title'), ['job_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_match_score'), ['match_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_notification_type'), ['notification_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_read_at'), ['read_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_match_notifications_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job_match_notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_user_id'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_read_at'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_notification_type'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_match_score'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_job_title'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_is_read'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_is_actioned'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_id'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_expires_at'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_email_sent'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_created_at'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_company_name'))
        batch_op.drop_index(batch_op.f('ix_job_match_notifications_actioned_at'))
        batch_op.drop_index('idx_notification_user_unread')
        batch_op.drop_index('idx_notification_user_type')
        batch_op.drop_index('idx_notification_user_created')
        batch_op.drop_index('idx_notification_expires')
        batch_op.drop_index('idx_notification_email')
        batch_op.drop_index('idx_notification_company_type')

    op.drop_table('job_match_notifications')
    with op.batch_alter_table('auto_application_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_success'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_match_score'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_job_title'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_id'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_created_at'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_company_name'))
        batch_op.drop_index(batch_op.f('ix_auto_application_logs_activity_type'))
        batch_op.drop_index('idx_log_user_created')
        batch_op.drop_index('idx_log_user_activity')
        batch_op.drop_index('idx_log_success_activity')
        batch_op.drop_index('idx_log_match_score')
        batch_op.drop_index('idx_log_company_activity')

    op.drop_table('auto_application_logs')
    with op.batch_alter_table('project_tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_tasks_id'))
        batch_op.drop_index('idx_project_tasks_updated_at')
        batch_op.drop_index('idx_project_tasks_priority')
        batch_op.drop_index('idx_project_tasks_phase_priority')
        batch_op.drop_index('idx_project_tasks_phase_order')
        batch_op.drop_index('idx_project_tasks_phase_id')
        batch_op.drop_index('idx_project_tasks_phase_completed')
        batch_op.drop_index('idx_project_tasks_order_index')
        batch_op.drop_index('idx_project_tasks_is_completed')
        batch_op.drop_index('idx_project_tasks_estimated_hours')
        batch_op.drop_index('idx_project_tasks_created_at')
        batch_op.drop_index('idx_project_tasks_completed_priority')
        batch_op.drop_index('idx_project_tasks_completed_at')
        batch_op.drop_index('idx_project_tasks_assigned_team_member')
        batch_op.drop_index('idx_project_tasks_assigned_completed')
        batch_op.drop_index('idx_project_tasks_actual_hours')

    op.drop_table('project_tasks')
    with op.batch_alter_table('portfolio_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portfolio_items_id'))
        batch_op.drop_index('idx_portfolio_items_visible_order')
        batch_op.drop_index('idx_portfolio_items_updated_at')
        batch_op.drop_index('idx_portfolio_items_type_category')
        batch_op.drop_index('idx_portfolio_items_source_type')
        batch_op.drop_index('idx_portfolio_items_source_simulation_id')
        batch_op.drop_index('idx_portfolio_items_portfolio_visible')
        batch_op.drop_index('idx_portfolio_items_portfolio_type')
        batch_op.drop_index('idx_portfolio_items_portfolio_order')
        batch_op.drop_index('idx_portfolio_items_portfolio_id')
        batch_op.drop_index('idx_portfolio_items_portfolio_featured')
        batch_op.drop_index('idx_portfolio_items_item_type')
        batch_op.drop_index('idx_portfolio_items_is_visible')
        batch_op.drop_index('idx_portfolio_items_is_featured')
        batch_op.drop_index('idx_portfolio_items_featured_visible')
        batch_op.drop_index('idx_portfolio_items_display_order')
        batch_op.drop_index('idx_portfolio_items_created_at')
        batch_op.drop_index('idx_portfolio_items_completion_date')
        batch_op.drop_index('idx_portfolio_items_category')

    op.drop_table('portfolio_items')
    with op.batch_alter_table('pending_auto_applications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_user_id'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_user_decision_at'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_user_decision'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_updated_at'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_status'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_processed_at'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_match_score'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_job_title'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_job_listing_id'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_id'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_external_job_id'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_expires_at'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_created_at'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_company_name'))
        batch_op.drop_index(batch_op.f('ix_pending_auto_applications_auto_apply_score'))
        batch_op.drop_index('idx_pending_user_status')
        batch_op.drop_index('idx_pending_user_created')
        batch_op.drop_index('idx_pending_match_score')
        batch_op.drop_index('idx_pending_expires_status')
        batch_op.drop_index('idx_pending_decision_time')
        batch_op.drop_index('idx_pending_company_user')

    op.drop_table('pending_auto_applications')
    with op.batch_alter_table('forum_comment_likes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_comment_likes_id'))
        batch_op.drop_index('idx_forum_comment_likes_user_id')
        batch_op.drop_index('idx_forum_comment_likes_user_created')
        batch_op.drop_index('idx_forum_comment_likes_created_at')
        batch_op.drop_index('idx_forum_comment_likes_comment_user')
        batch_op.drop_index('idx_forum_comment_likes_comment_id')

    op.drop_table('forum_comment_likes')
    with op.batch_alter_table('work_experiences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_work_experiences_team_size_managed'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_start_date'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_projects_delivered'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_location'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_job_title'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_is_current'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_include_in_cv'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_id'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_end_date'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_employment_type'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_display_order'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_cv_id'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_created_at'))
        batch_op.drop_index(batch_op.f('ix_work_experiences_company_name'))
        batch_op.drop_index('idx_work_type_location')
        batch_op.drop_index('idx_work_dates_range')
        batch_op.drop_index('idx_work_cv_order')
        batch_op.drop_index('idx_work_cv_include')
        batch_op.drop_index('idx_work_cv_current')
        batch_op.drop_index('idx_work_company_title')

    op.drop_table('work_experiences')
    with op.batch_alter_table('user_skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_skills_skill_name'))
        batch_op.drop_index(batch_op.f('ix_user_skills_skill_category'))
        batch_op.drop_index(batch_op.f('ix_user_skills_profile_id'))
        batch_op.drop_index(batch_op.f('ix_user_skills_proficiency_level'))
        batch_op.drop_index(batch_op.f('ix_user_skills_is_verified'))
        batch_op.drop_index(batch_op.f('ix_user_skills_id'))
        batch_op.drop_index(batch_op.f('ix_user_skills_created_at'))
        batch_op.drop_index('idx_skill_profile_verified')
        batch_op.drop_index('idx_skill_profile_category')
        batch_op.drop_index('idx_skill_name_level')
        batch_op.drop_index('idx_skill_category_verified')

    op.drop_table('user_skills')
    with op.batch_alter_table('testimonials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_testimonials_id'))
        batch_op.drop_index('idx_testimonials_verified_public')
        batch_op.drop_index('idx_testimonials_user_verified')
        batch_op.drop_index('idx_testimonials_user_public')
        batch_op.drop_index('idx_testimonials_user_id')
        batch_op.drop_index('idx_testimonials_source')
        batch_op.drop_index('idx_testimonials_relationship_verified')
        batch_op.drop_index('idx_testimonials_recommender_relationship')
        batch_op.drop_index('idx_testimonials_rating_public')
        batch_op.drop_index('idx_testimonials_rating')
        batch_op.drop_index('idx_testimonials_portfolio_id')
        batch_op.drop_index('idx_testimonials_portfolio_featured')
        batch_op.drop_index('idx_testimonials_is_verified')
        batch_op.drop_index('idx_testimonials_is_public')
        batch_op.drop_index('idx_testimonials_is_featured')
        batch_op.drop_index('idx_testimonials_display_order')
        batch_op.drop_index('idx_testimonials_date_of_collaboration')
        batch_op.drop_index('idx_testimonials_created_at')

    op.drop_table('testimonials')
    with op.batch_alter_table('skill_assessments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skill_assessments_id'))
        batch_op.drop_index('idx_skill_assessments_verification_project_id')
        batch_op.drop_index('idx_skill_assessments_user_skill')
        batch_op.drop_index('idx_skill_assessments_user_level')
        batch_op.drop_index('idx_skill_assessments_user_id')
        batch_op.drop_index('idx_skill_assessments_user_category')
        batch_op.drop_index('idx_skill_assessments_user_assessed')
        batch_op.drop_index('idx_skill_assessments_type_verified')
        batch_op.drop_index('idx_skill_assessments_skill_name')
        batch_op.drop_index('idx_skill_assessments_skill_category')
        batch_op.drop_index('idx_skill_assessments_progress_trend')
        batch_op.drop_index('idx_skill_assessments_is_verified')
        batch_op.drop_index('idx_skill_assessments_current_level')
        batch_op.drop_index('idx_skill_assessments_confidence_score')
        batch_op.drop_index('idx_skill_assessments_category_level')
        batch_op.drop_index('idx_skill_assessments_assessment_type')
        batch_op.drop_index('idx_skill_assessments_assessed_at')

    op.drop_table('skill_assessments')
    with op.batch_alter_table('references', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_references_id'))

    op.drop_table('references')
    with op.batch_alter_table('project_phases', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_phases_id'))
        batch_op.drop_index('idx_project_phases_updated_at')
        batch_op.drop_index('idx_project_phases_project_start')
        batch_op.drop_index('idx_project_phases_project_progress')
        batch_op.drop_index('idx_project_phases_project_order')
        batch_op.drop_index('idx_project_phases_project_id')
        batch_op.drop_index('idx_project_phases_project_completed')
        batch_op.drop_index('idx_project_phases_progress_percentage')
        batch_op.drop_index('idx_project_phases_planned_start_date')
        batch_op.drop_index('idx_project_phases_planned_end_date')
        batch_op.drop_index('idx_project_phases_order_index')
        batch_op.drop_index('idx_project_phases_is_completed')
        batch_op.drop_index('idx_project_phases_created_at')
        batch_op.drop_index('idx_project_phases_completed_order')
        batch_op.drop_index('idx_project_phases_ai_phase_score')
        batch_op.drop_index('idx_project_phases_actual_start_date')
        batch_op.drop_index('idx_project_phases_actual_end_date')

    op.drop_table('project_phases')
    with op.batch_alter_table('project_artifacts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_artifacts_id'))
        batch_op.drop_index('idx_project_artifacts_updated_at')
        batch_op.drop_index('idx_project_artifacts_type_generated')
        batch_op.drop_index('idx_project_artifacts_project_type')
        batch_op.drop_index('idx_project_artifacts_project_portfolio')
        batch_op.drop_index('idx_project_artifacts_project_id')
        batch_op.drop_index('idx_project_artifacts_project_created')
        batch_op.drop_index('idx_project_artifacts_portfolio_type')
        batch_op.drop_index('idx_project_artifacts_mime_type')
        batch_op.drop_index('idx_project_artifacts_is_ai_generated')
        batch_op.drop_index('idx_project_artifacts_include_in_portfolio')
        batch_op.drop_index('idx_project_artifacts_file_size')
        batch_op.drop_index('idx_project_artifacts_created_at')
        batch_op.drop_index('idx_project_artifacts_content_format')
        batch_op.drop_index('idx_project_artifacts_artifact_type')

    op.drop_table('project_artifacts')
    with op.batch_alter_table('mentorship_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mentorship_sessions_id'))
        batch_op.drop_index('idx_mentorship_sessions_updated_at')
        batch_op.drop_index('idx_mentorship_sessions_status_scheduled')
        batch_op.drop_index('idx_mentorship_sessions_status')
        batch_op.drop_index('idx_mentorship_sessions_scheduled_date')
        batch_op.drop_index('idx_mentorship_sessions_mentorship_status')
        batch_op.drop_index('idx_mentorship_sessions_mentorship_scheduled')
        batch_op.drop_index('idx_mentorship_sessions_mentorship_id')
        batch_op.drop_index('idx_mentorship_sessions_mentorship_created')
        batch_op.drop_index('idx_mentorship_sessions_created_at')
        batch_op.drop_index('idx_mentorship_sessions_actual_start_time')

    op.drop_table('mentorship_sessions')
    with op.batch_alter_table('languages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_languages_id'))

    op.drop_table('languages')
    with op.batch_alter_table('job_applications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_applications_id'))

    op.drop_table('job_applications')
    with op.batch_alter_table('forum_likes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_likes_id'))
        batch_op.drop_index('idx_forum_likes_user_id')
        batch_op.drop_index('idx_forum_likes_user_created')
        batch_op.drop_index('idx_forum_likes_post_user')
        batch_op.drop_index('idx_forum_likes_post_id')
        batch_op.drop_index('idx_forum_likes_created_at')

    op.drop_table('forum_likes')
    with op.batch_alter_table('forum_comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_comments_id'))
        batch_op.drop_index('idx_forum_comments_updated_at')
        batch_op.drop_index('idx_forum_comments_post_id')
        batch_op.drop_index('idx_forum_comments_post_created')
        batch_op.drop_index('idx_forum_comments_post_active')
        batch_op.drop_index('idx_forum_comments_post_accepted')
        batch_op.drop_index('idx_forum_comments_parent_comment_id')
        batch_op.drop_index('idx_forum_comments_parent_active')
        batch_op.drop_index('idx_forum_comments_like_count')
        batch_op.drop_index('idx_forum_comments_is_deleted')
        batch_op.drop_index('idx_forum_comments_is_accepted_answer')
        batch_op.drop_index('idx_forum_comments_created_at')
        batch_op.drop_index('idx_forum_comments_author_id')
        batch_op.drop_index('idx_forum_comments_author_active')

    op.drop_table('forum_comments')
    with op.batch_alter_table('educations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_educations_start_date'))
        batch_op.drop_index(batch_op.f('ix_educations_location'))
        batch_op.drop_index(batch_op.f('ix_educations_is_current'))
        batch_op.drop_index(batch_op.f('ix_educations_institution_name'))
        batch_op.drop_index(batch_op.f('ix_educations_include_in_cv'))
        batch_op.drop_index(batch_op.f('ix_educations_id'))
        batch_op.drop_index(batch_op.f('ix_educations_field_of_study'))
        batch_op.drop_index(batch_op.f('ix_educations_end_date'))
        batch_op.drop_index(batch_op.f('ix_educations_display_order'))
        batch_op.drop_index(batch_op.f('ix_educations_degree_type'))
        batch_op.drop_index(batch_op.f('ix_educations_cv_id'))
        batch_op.drop_index(batch_op.f('ix_educations_created_at'))
        batch_op.drop_index('idx_education_institution_degree')
        batch_op.drop_index('idx_education_degree_field')
        batch_op.drop_index('idx_education_dates_range')
        batch_op.drop_index('idx_education_cv_order')
        batch_op.drop_index('idx_education_cv_include')
        batch_op.drop_index('idx_education_cv_current')

    op.drop_table('educations')
    with op.batch_alter_table('cv_skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cv_skills_id'))

    op.drop_table('cv_skills')
    with op.batch_alter_table('cv_sections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cv_sections_id'))

    op.drop_table('cv_sections')
    with op.batch_alter_table('cv_projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cv_projects_id'))

    op.drop_table('cv_projects')
    with op.batch_alter_table('cv_exports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cv_exports_id'))

    op.drop_table('cv_exports')
    with op.batch_alter_table('certifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_certifications_id'))

    op.drop_table('certifications')
    with op.batch_alter_table('ai_coaching_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_coaching_sessions_id'))
        batch_op.drop_index('idx_ai_coaching_sessions_voice_duration_seconds')
        batch_op.drop_index('idx_ai_coaching_sessions_voice_duration')
        batch_op.drop_index('idx_ai_coaching_sessions_user_satisfaction_rating')
        batch_op.drop_index('idx_ai_coaching_sessions_type_rating')
        batch_op.drop_index('idx_ai_coaching_sessions_session_type')
        batch_op.drop_index('idx_ai_coaching_sessions_session_duration_minutes')
        batch_op.drop_index('idx_ai_coaching_sessions_project_type')
        batch_op.drop_index('idx_ai_coaching_sessions_project_impact')
        batch_op.drop_index('idx_ai_coaching_sessions_project_id')
        batch_op.drop_index('idx_ai_coaching_sessions_project_created')
        batch_op.drop_index('idx_ai_coaching_sessions_learning_progress_impact')
        batch_op.drop_index('idx_ai_coaching_sessions_has_voice_narration')
        batch_op.drop_index('idx_ai_coaching_sessions_created_at')

    op.drop_table('ai_coaching_sessions')
    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_achievements_id'))
        batch_op.drop_index('idx_achievements_verified_public')
        batch_op.drop_index('idx_achievements_user_type')
        batch_op.drop_index('idx_achievements_user_public')
        batch_op.drop_index('idx_achievements_user_id')
        batch_op.drop_index('idx_achievements_user_earned')
        batch_op.drop_index('idx_achievements_user_category')
        batch_op.drop_index('idx_achievements_type_difficulty')
        batch_op.drop_index('idx_achievements_source_simulation_id')
        batch_op.drop_index('idx_achievements_portfolio_id')
        batch_op.drop_index('idx_achievements_portfolio_featured')
        batch_op.drop_index('idx_achievements_points_awarded')
        batch_op.drop_index('idx_achievements_is_verified')
        batch_op.drop_index('idx_achievements_is_public')
        batch_op.drop_index('idx_achievements_is_featured')
        batch_op.drop_index('idx_achievements_earned_from_simulation')
        batch_op.drop_index('idx_achievements_earned_at')
        batch_op.drop_index('idx_achievements_display_order')
        batch_op.drop_index('idx_achievements_difficulty_level')
        batch_op.drop_index('idx_achievements_category')
        batch_op.drop_index('idx_achievements_achievement_type')

    op.drop_table('achievements')
    with op.batch_alter_table('user_streaks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_streaks_id'))

    op.drop_table('user_streaks')
    with op.batch_alter_table('user_points', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_points_id'))

    op.drop_table('user_points')
    with op.batch_alter_table('user_module_progress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_module_progress_id'))

    op.drop_table('user_module_progress')
    with op.batch_alter_table('user_levels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_levels_id'))

    op.drop_table('user_levels')
    with op.batch_alter_table('user_badges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_badges_id'))

    op.drop_table('user_badges')
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_achievements_id'))

    op.drop_table('user_achievements')
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skills_id'))

    op.drop_table('skills')
    with op.batch_alter_table('saved_jobs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_saved_jobs_id'))
        batch_op.drop_index('idx_saved_jobs_user_saved')
        batch_op.drop_index('idx_saved_jobs_user_id')
        batch_op.drop_index('idx_saved_jobs_user_company')
        batch_op.drop_index('idx_saved_jobs_source_platform')
        batch_op.drop_index('idx_saved_jobs_saved_at')
        batch_op.drop_index('idx_saved_jobs_company_name')

    op.drop_table('saved_jobs')
    with op.batch_alter_table('project_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_templates_id'))
        batch_op.drop_index('idx_project_templates_usage_count')
        batch_op.drop_index('idx_project_templates_updated_at')
        batch_op.drop_index('idx_project_templates_track_usage')
        batch_op.drop_index('idx_project_templates_track_difficulty')
        batch_op.drop_index('idx_project_templates_track_active')
        batch_op.drop_index('idx_project_templates_methodology_difficulty')
        batch_op.drop_index('idx_project_templates_methodology')
        batch_op.drop_index('idx_project_templates_is_active')
        batch_op.drop_index('idx_project_templates_industry_track_id')
        batch_op.drop_index('idx_project_templates_difficulty_level')
        batch_op.drop_index('idx_project_templates_created_at')
        batch_op.drop_index('idx_project_templates_average_rating')
        batch_op.drop_index('idx_project_templates_active_usage')
        batch_op.drop_index('idx_project_templates_active_rating')

    op.drop_table('project_templates')
    with op.batch_alter_table('project_simulations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_simulations_id'))
        batch_op.drop_index('idx_project_simulations_user_track')
        batch_op.drop_index('idx_project_simulations_user_status')
        batch_op.drop_index('idx_project_simulations_user_progress')
        batch_op.drop_index('idx_project_simulations_user_id')
        batch_op.drop_index('idx_project_simulations_user_completed')
        batch_op.drop_index('idx_project_simulations_updated_at')
        batch_op.drop_index('idx_project_simulations_track_difficulty')
        batch_op.drop_index('idx_project_simulations_status_methodology')
        batch_op.drop_index('idx_project_simulations_status')
        batch_op.drop_index('idx_project_simulations_started_at')
        batch_op.drop_index('idx_project_simulations_progress_percentage')
        batch_op.drop_index('idx_project_simulations_methodology')
        batch_op.drop_index('idx_project_simulations_industry_track_id')
        batch_op.drop_index('idx_project_simulations_estimated_duration_hours')
        batch_op.drop_index('idx_project_simulations_difficulty_level')
        batch_op.drop_index('idx_project_simulations_current_phase')
        batch_op.drop_index('idx_project_simulations_created_at')
        batch_op.drop_index('idx_project_simulations_completed_at')
        batch_op.drop_index('idx_project_simulations_ai_feedback_score')
        batch_op.drop_index('idx_project_simulations_active_progress')

    op.drop_table('project_simulations')
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_profiles_years_of_experience'))
        batch_op.drop_index(batch_op.f('ix_profiles_updated_at'))
        batch_op.drop_index(batch_op.f('ix_profiles_timezone'))
        batch_op.drop_index(batch_op.f('ix_profiles_salary_expectations_min'))
        batch_op.drop_index(batch_op.f('ix_profiles_salary_expectations_max'))
        batch_op.drop_index(batch_op.f('ix_profiles_require_manual_approval'))
        batch_op.drop_index(batch_op.f('ix_profiles_preferred_work_mode'))
        batch_op.drop_index(batch_op.f('ix_profiles_learning_style'))
        batch_op.drop_index(batch_op.f('ix_profiles_job_alerts_enabled'))
        batch_op.drop_index(batch_op.f('ix_profiles_is_complete'))
        batch_op.drop_index(batch_op.f('ix_profiles_id'))
        batch_op.drop_index(batch_op.f('ix_profiles_current_job_title'))
        batch_op.drop_index(batch_op.f('ix_profiles_created_at'))
        batch_op.drop_index(batch_op.f('ix_profiles_country'))
        batch_op.drop_index(batch_op.f('ix_profiles_completion_percentage'))
        batch_op.drop_index(batch_op.f('ix_profiles_company'))
        batch_op.drop_index(batch_op.f('ix_profiles_city'))
        batch_op.drop_index(batch_op.f('ix_profiles_auto_apply_only_remote'))
        batch_op.drop_index(batch_op.f('ix_profiles_auto_apply_enabled'))
        batch_op.drop_index('idx_profile_salary_auto')
        batch_op.drop_index('idx_profile_remote_auto')
        batch_op.drop_index('idx_profile_location')
        batch_op.drop_index('idx_profile_experience_title')
        batch_op.drop_index('idx_profile_completion_mode')
        batch_op.drop_index('idx_profile_company_experience')
        batch_op.drop_index('idx_profile_auto_apply')
        batch_op.drop_index('idx_profile_approval_auto')

    op.drop_table('profiles')
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portfolios_public_url_slug'))
        batch_op.drop_index(batch_op.f('ix_portfolios_id'))
        batch_op.drop_index('idx_portfolios_view_count')
        batch_op.drop_index('idx_portfolios_user_updated')
        batch_op.drop_index('idx_portfolios_user_public')
        batch_op.drop_index('idx_portfolios_user_id')
        batch_op.drop_index('idx_portfolios_user_default')
        batch_op.drop_index('idx_portfolios_user_created')
        batch_op.drop_index('idx_portfolios_updated_at')
        batch_op.drop_index('idx_portfolios_theme')
        batch_op.drop_index('idx_portfolios_share_count')
        batch_op.drop_index('idx_portfolios_public_views')
        batch_op.drop_index('idx_portfolios_public_theme')
        batch_op.drop_index('idx_portfolios_last_exported_at')
        batch_op.drop_index('idx_portfolios_is_public')
        batch_op.drop_index('idx_portfolios_is_default')
        batch_op.drop_index('idx_portfolios_created_at')

    op.drop_table('portfolios')
    with op.batch_alter_table('point_transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_point_transactions_id'))

    op.drop_table('point_transactions')
    with op.batch_alter_table('mentorships', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mentorships_id'))
        batch_op.drop_index('idx_mentorships_status_type')
        batch_op.drop_index('idx_mentorships_status')
        batch_op.drop_index('idx_mentorships_sessions_completed')
        batch_op.drop_index('idx_mentorships_requested_at')
        batch_op.drop_index('idx_mentorships_mentorship_type')
        batch_op.drop_index('idx_mentorships_mentor_status')
        batch_op.drop_index('idx_mentorships_mentor_requested')
        batch_op.drop_index('idx_mentorships_mentor_id')
        batch_op.drop_index('idx_mentorships_mentee_status')
        batch_op.drop_index('idx_mentorships_mentee_requested')
        batch_op.drop_index('idx_mentorships_mentee_id')
        batch_op.drop_index('idx_mentorships_completed_at')
        batch_op.drop_index('idx_mentorships_active_progress')
        batch_op.drop_index('idx_mentorships_accepted_at')

    op.drop_table('mentorships')
    with op.batch_alter_table('mentorship_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mentorship_requests_id'))
        batch_op.drop_index('idx_mentorship_requests_type_experience')
        batch_op.drop_index('idx_mentorship_requests_status_public')
        batch_op.drop_index('idx_mentorship_requests_status_expires')
        batch_op.drop_index('idx_mentorship_requests_status')
        batch_op.drop_index('idx_mentorship_requests_public_created')
        batch_op.drop_index('idx_mentorship_requests_open_public')
        batch_op.drop_index('idx_mentorship_requests_mentorship_type')
        batch_op.drop_index('idx_mentorship_requests_mentor_id')
        batch_op.drop_index('idx_mentorship_requests_mentee_status')
        batch_op.drop_index('idx_mentorship_requests_mentee_id')
        batch_op.drop_index('idx_mentorship_requests_is_public')
        batch_op.drop_index('idx_mentorship_requests_expires_at')
        batch_op.drop_index('idx_mentorship_requests_current_experience_level')
        batch_op.drop_index('idx_mentorship_requests_created_at')

    op.drop_table('mentorship_requests')
    with op.batch_alter_table('mentor_profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_total_reviews'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_preferred_communication'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_max_mentees'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_is_available'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_is_approved'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_id'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_hourly_rate'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_current_mentees_count'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_created_at'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_average_rating'))
        batch_op.drop_index(batch_op.f('ix_mentor_profiles_approved_at'))
        batch_op.drop_index('idx_mentor_rating_reviews')
        batch_op.drop_index('idx_mentor_rate_available')
        batch_op.drop_index('idx_mentor_capacity')
        batch_op.drop_index('idx_mentor_available_approved')

    op.drop_table('mentor_profiles')
    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_paths_id'))

    op.drop_table('learning_paths')
    with op.batch_alter_table('learning_goals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_goals_id'))
        batch_op.drop_index('idx_learning_goals_user_type')
        batch_op.drop_index('idx_learning_goals_user_status')
        batch_op.drop_index('idx_learning_goals_user_progress')
        batch_op.drop_index('idx_learning_goals_user_priority')
        batch_op.drop_index('idx_learning_goals_user_id')
        batch_op.drop_index('idx_learning_goals_updated_at')
        batch_op.drop_index('idx_learning_goals_target_skill')
        batch_op.drop_index('idx_learning_goals_target_level')
        batch_op.drop_index('idx_learning_goals_target_date')
        batch_op.drop_index('idx_learning_goals_status_target_date')
        batch_op.drop_index('idx_learning_goals_status_priority')
        batch_op.drop_index('idx_learning_goals_status')
        batch_op.drop_index('idx_learning_goals_progress_percentage')
        batch_op.drop_index('idx_learning_goals_priority')
        batch_op.drop_index('idx_learning_goals_goal_type')
        batch_op.drop_index('idx_learning_goals_created_at')
        batch_op.drop_index('idx_learning_goals_completed_at')
        batch_op.drop_index('idx_learning_goals_active_target_date')

    op.drop_table('learning_goals')
    with op.batch_alter_table('leaderboard_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_leaderboard_entries_rank'))
        batch_op.drop_index(batch_op.f('ix_leaderboard_entries_id'))

    op.drop_table('leaderboard_entries')
    with op.batch_alter_table('job_skill_requirements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_skill_requirements_skill_name'))
        batch_op.drop_index(batch_op.f('ix_job_skill_requirements_id'))

    op.drop_table('job_skill_requirements')
    with op.batch_alter_table('job_searches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_searches_id'))

    op.drop_table('job_searches')
    with op.batch_alter_table('job_matches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_matches_id'))

    op.drop_table('job_matches')
    with op.batch_alter_table('job_application_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_application_templates_user_id'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_updated_at'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_template_type'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_last_used_at'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_is_default'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_is_active'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_id'))
        batch_op.drop_index(batch_op.f('ix_job_application_templates_created_at'))
        batch_op.drop_index('idx_template_user_type')
        batch_op.drop_index('idx_template_user_active')
        batch_op.drop_index('idx_template_success_rate')
        batch_op.drop_index('idx_template_last_used')

    op.drop_table('job_application_templates')
    with op.batch_alter_table('job_alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_alerts_id'))

    op.drop_table('job_alerts')
    with op.batch_alter_table('industry_specializations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_industry_specializations_name'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_job_market_demand'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_is_active'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_industry_track_id'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_id'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_growth_projection'))
        batch_op.drop_index(batch_op.f('ix_industry_specializations_created_at'))

    op.drop_table('industry_specializations')
    with op.batch_alter_table('game_challenge_participations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_challenge_participations_id'))

    op.drop_table('game_challenge_participations')
    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_posts_title'))
        batch_op.drop_index(batch_op.f('ix_forum_posts_slug'))
        batch_op.drop_index(batch_op.f('ix_forum_posts_id'))
        batch_op.drop_index('idx_forum_posts_view_count')
        batch_op.drop_index('idx_forum_posts_updated_at')
        batch_op.drop_index('idx_forum_posts_type_answered')
        batch_op.drop_index('idx_forum_posts_post_type')
        batch_op.drop_index('idx_forum_posts_pinned_active')
        batch_op.drop_index('idx_forum_posts_like_count')
        batch_op.drop_index('idx_forum_posts_last_activity_at')
        batch_op.drop_index('idx_forum_posts_is_pinned')
        batch_op.drop_index('idx_forum_posts_is_locked')
        batch_op.drop_index('idx_forum_posts_is_featured')
        batch_op.drop_index('idx_forum_posts_is_deleted')
        batch_op.drop_index('idx_forum_posts_is_answered')
        batch_op.drop_index('idx_forum_posts_featured_active')
        batch_op.drop_index('idx_forum_posts_created_at')
        batch_op.drop_index('idx_forum_posts_comment_count')
        batch_op.drop_index('idx_forum_posts_category_type')
        batch_op.drop_index('idx_forum_posts_category_id')
        batch_op.drop_index('idx_forum_posts_category_created')
        batch_op.drop_index('idx_forum_posts_category_activity')
        batch_op.drop_index('idx_forum_posts_category_active')
        batch_op.drop_index('idx_forum_posts_author_id')
        batch_op.drop_index('idx_forum_posts_author_active')

    op.drop_table('forum_posts')
    with op.batch_alter_table('cvs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cvs_user_id'))
        batch_op.drop_index(batch_op.f('ix_cvs_updated_at'))
        batch_op.drop_index(batch_op.f('ix_cvs_title'))
        batch_op.drop_index(batch_op.f('ix_cvs_template_type'))
        batch_op.drop_index(batch_op.f('ix_cvs_target_role'))
        batch_op.drop_index(batch_op.f('ix_cvs_target_industry'))
        batch_op.drop_index(batch_op.f('ix_cvs_last_exported_at'))
        batch_op.drop_index(batch_op.f('ix_cvs_is_public'))
        batch_op.drop_index(batch_op.f('ix_cvs_is_default'))
        batch_op.drop_index(batch_op.f('ix_cvs_is_ai_generated'))
        batch_op.drop_index(batch_op.f('ix_cvs_id'))
        batch_op.drop_index(batch_op.f('ix_cvs_created_at'))
        batch_op.drop_index('idx_cv_user_status')
        batch_op.drop_index('idx_cv_user_default')
        batch_op.drop_index('idx_cv_user_created')
        batch_op.drop_index('idx_cv_template_role')
        batch_op.drop_index('idx_cv_industry_role')
        batch_op.drop_index('idx_cv_ai_generated')

    op.drop_table('cvs')
    with op.batch_alter_table('community_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_community_events_id'))
        batch_op.drop_index('idx_community_events_updated_at')
        batch_op.drop_index('idx_community_events_upcoming_start')
        batch_op.drop_index('idx_community_events_type_status')
        batch_op.drop_index('idx_community_events_type_start')
        batch_op.drop_index('idx_community_events_status_start')
        batch_op.drop_index('idx_community_events_status_created')
        batch_op.drop_index('idx_community_events_status')
        batch_op.drop_index('idx_community_events_start_date')
        batch_op.drop_index('idx_community_events_registration_required')
        batch_op.drop_index('idx_community_events_organizer_status')
        batch_op.drop_index('idx_community_events_organizer_id')
        batch_op.drop_index('idx_community_events_is_free')
        batch_op.drop_index('idx_community_events_free_status')
        batch_op.drop_index('idx_community_events_event_type')
        batch_op.drop_index('idx_community_events_end_date')
        batch_op.drop_index('idx_community_events_created_at')
        batch_op.drop_index('idx_community_events_attendee_count')

    op.drop_table('community_events')
    with op.batch_alter_table('challenge_participations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenge_participations_id'))

    op.drop_table('challenge_participations')
    with op.batch_alter_table('auto_application_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auto_application_settings_updated_at'))
        batch_op.drop_index(batch_op.f('ix_auto_application_settings_last_job_scan_at'))
        batch_op.drop_index(batch_op.f('ix_auto_application_settings_last_application_at'))
        batch_op.drop_index(batch_op.f('ix_auto_application_settings_id'))
        batch_op.drop_index(batch_op.f('ix_auto_application_settings_created_at'))
        batch_op.drop_index('idx_settings_success_rate')
        batch_op.drop_index('idx_settings_scan_time')
        batch_op.drop_index('idx_settings_application_time')

    op.drop_table('auto_application_settings')
    with op.batch_alter_table('weekly_challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_weekly_challenges_id'))

    op.drop_table('weekly_challenges')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_updated_at'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_last_login'))
        batch_op.drop_index(batch_op.f('ix_users_is_verified'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_created_at'))
        batch_op.drop_index('idx_user_verified_active')
        batch_op.drop_index('idx_user_last_login_active')
        batch_op.drop_index('idx_user_created_role')
        batch_op.drop_index('idx_user_active_role')

    op.drop_table('users')
    with op.batch_alter_table('skill_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skill_categories_id'))

    op.drop_table('skill_categories')
    with op.batch_alter_table('learning_modules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_modules_updated_at'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_title'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_order_index'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_learning_path'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_is_active'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_id'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_duration_minutes'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_difficulty_level'))
        batch_op.drop_index(batch_op.f('ix_learning_modules_created_at'))
        batch_op.drop_index('idx_module_path_order')
        batch_op.drop_index('idx_module_path_active')
        batch_op.drop_index('idx_module_duration_difficulty')
        batch_op.drop_index('idx_module_difficulty_path')

    op.drop_table('learning_modules')
    with op.batch_alter_table('leaderboards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_leaderboards_slug'))
        batch_op.drop_index(batch_op.f('ix_leaderboards_id'))

    op.drop_table('leaderboards')
    with op.batch_alter_table('job_listings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_listings_work_mode'))
        batch_op.drop_index(batch_op.f('ix_job_listings_title'))
        batch_op.drop_index(batch_op.f('ix_job_listings_id'))
        batch_op.drop_index(batch_op.f('ix_job_listings_experience_level'))
        batch_op.drop_index(batch_op.f('ix_job_listings_employment_type'))
        batch_op.drop_index(batch_op.f('ix_job_listings_country'))
        batch_op.drop_index(batch_op.f('ix_job_listings_company_name'))

    op.drop_table('job_listings')
    with op.batch_alter_table('industry_tracks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_industry_tracks_updated_at'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_total_projects'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_total_learners'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_slug'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_name'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_is_featured'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_is_active'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_id'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_created_at'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_color_theme'))
        batch_op.drop_index(batch_op.f('ix_industry_tracks_average_completion_rate'))
        batch_op.drop_index('idx_industry_stats')
        batch_op.drop_index('idx_industry_projects_learners')
        batch_op.drop_index('idx_industry_created_active')
        batch_op.drop_index('idx_industry_active_featured')

    op.drop_table('industry_tracks')
    with op.batch_alter_table('forum_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_categories_slug'))
        batch_op.drop_index(batch_op.f('ix_forum_categories_id'))
        batch_op.drop_index('idx_forum_categories_public_active')
        batch_op.drop_index('idx_forum_categories_post_count')
        batch_op.drop_index('idx_forum_categories_parent_order')
        batch_op.drop_index('idx_forum_categories_parent_category_id')
        batch_op.drop_index('idx_forum_categories_name')
        batch_op.drop_index('idx_forum_categories_is_public')
        batch_op.drop_index('idx_forum_categories_is_active')
        batch_op.drop_index('idx_forum_categories_display_order')
        batch_op.drop_index('idx_forum_categories_created_at')
        batch_op.drop_index('idx_forum_categories_active_order')

    op.drop_table('forum_categories')
    with op.batch_alter_table('cv_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cv_templates_id'))

    op.drop_table('cv_templates')
    with op.batch_alter_table('company_profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_company_profiles_id'))
        batch_op.drop_index(batch_op.f('ix_company_profiles_company_name'))

    op.drop_table('company_profiles')
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenges_id'))
        batch_op.drop_index(batch_op.f('ix_challenges_challenge_type'))

    op.drop_table('challenges')
    with op.batch_alter_table('certification_paths', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_certification_paths_id'))

    op.drop_table('certification_paths')
    with op.batch_alter_table('badges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_badges_total_earned'))
        batch_op.drop_index(batch_op.f('ix_badges_slug'))
        batch_op.drop_index(batch_op.f('ix_badges_rarity'))
        batch_op.drop_index(batch_op.f('ix_badges_points_required'))
        batch_op.drop_index(batch_op.f('ix_badges_is_hidden'))
        batch_op.drop_index(batch_op.f('ix_badges_is_active'))
        batch_op.drop_index(batch_op.f('ix_badges_id'))
        batch_op.drop_index(batch_op.f('ix_badges_created_at'))
        batch_op.drop_index(batch_op.f('ix_badges_can_be_earned_multiple'))
        batch_op.drop_index(batch_op.f('ix_badges_badge_type'))
        batch_op.drop_index('idx_badge_type_rarity')
        batch_op.drop_index('idx_badge_points_type')
        batch_op.drop_index('idx_badge_hidden_active')
        batch_op.drop_index('idx_badge_earned_rarity')
        batch_op.drop_index('idx_badge_active_type')

    op.drop_table('badges')
    # ### end Alembic commands ###